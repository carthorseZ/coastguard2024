#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBInterface
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CoastGuard")]
	public partial class CoastGuardDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertActivityDestination(ActivityDestination instance);
    partial void UpdateActivityDestination(ActivityDestination instance);
    partial void DeleteActivityDestination(ActivityDestination instance);
    partial void InsertActivityDrillMember(ActivityDrillMember instance);
    partial void UpdateActivityDrillMember(ActivityDrillMember instance);
    partial void DeleteActivityDrillMember(ActivityDrillMember instance);
    partial void InsertActivityDrill(ActivityDrill instance);
    partial void UpdateActivityDrill(ActivityDrill instance);
    partial void DeleteActivityDrill(ActivityDrill instance);
    partial void InsertActivityMember(ActivityMember instance);
    partial void UpdateActivityMember(ActivityMember instance);
    partial void DeleteActivityMember(ActivityMember instance);
    partial void InsertActivityPassanger(ActivityPassanger instance);
    partial void UpdateActivityPassanger(ActivityPassanger instance);
    partial void DeleteActivityPassanger(ActivityPassanger instance);
    partial void InsertActivityScenarioMember(ActivityScenarioMember instance);
    partial void UpdateActivityScenarioMember(ActivityScenarioMember instance);
    partial void DeleteActivityScenarioMember(ActivityScenarioMember instance);
    partial void InsertActivityScenario(ActivityScenario instance);
    partial void UpdateActivityScenario(ActivityScenario instance);
    partial void DeleteActivityScenario(ActivityScenario instance);
    partial void InsertActivityTrainerLink(ActivityTrainerLink instance);
    partial void UpdateActivityTrainerLink(ActivityTrainerLink instance);
    partial void DeleteActivityTrainerLink(ActivityTrainerLink instance);
    partial void InsertActivityType(ActivityType instance);
    partial void UpdateActivityType(ActivityType instance);
    partial void DeleteActivityType(ActivityType instance);
    partial void InsertAlert(Alert instance);
    partial void UpdateAlert(Alert instance);
    partial void DeleteAlert(Alert instance);
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
    partial void InsertCoastGuardMember(CoastGuardMember instance);
    partial void UpdateCoastGuardMember(CoastGuardMember instance);
    partial void DeleteCoastGuardMember(CoastGuardMember instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertCustom_LookupItem(Custom_LookupItem instance);
    partial void UpdateCustom_LookupItem(Custom_LookupItem instance);
    partial void DeleteCustom_LookupItem(Custom_LookupItem instance);
    partial void InsertCustom_Lookup(Custom_Lookup instance);
    partial void UpdateCustom_Lookup(Custom_Lookup instance);
    partial void DeleteCustom_Lookup(Custom_Lookup instance);
    partial void InsertCustom_Menu(Custom_Menu instance);
    partial void UpdateCustom_Menu(Custom_Menu instance);
    partial void DeleteCustom_Menu(Custom_Menu instance);
    partial void InsertCustom_MenuOption(Custom_MenuOption instance);
    partial void UpdateCustom_MenuOption(Custom_MenuOption instance);
    partial void DeleteCustom_MenuOption(Custom_MenuOption instance);
    partial void InsertDestination(Destination instance);
    partial void UpdateDestination(Destination instance);
    partial void DeleteDestination(Destination instance);
    partial void InsertDrilCourse(DrilCourse instance);
    partial void UpdateDrilCourse(DrilCourse instance);
    partial void DeleteDrilCourse(DrilCourse instance);
    partial void InsertDrill(Drill instance);
    partial void UpdateDrill(Drill instance);
    partial void DeleteDrill(Drill instance);
    partial void InsertEngine(Engine instance);
    partial void UpdateEngine(Engine instance);
    partial void DeleteEngine(Engine instance);
    partial void Insertenum(@enum instance);
    partial void Updateenum(@enum instance);
    partial void Deleteenum(@enum instance);
    partial void InsertenumValue(enumValue instance);
    partial void UpdateenumValue(enumValue instance);
    partial void DeleteenumValue(enumValue instance);
    partial void InsertFileUploadStatus(FileUploadStatus instance);
    partial void UpdateFileUploadStatus(FileUploadStatus instance);
    partial void DeleteFileUploadStatus(FileUploadStatus instance);
    partial void InsertMemberSetting(MemberSetting instance);
    partial void UpdateMemberSetting(MemberSetting instance);
    partial void DeleteMemberSetting(MemberSetting instance);
    partial void InsertMenuSecurityLink(MenuSecurityLink instance);
    partial void UpdateMenuSecurityLink(MenuSecurityLink instance);
    partial void DeleteMenuSecurityLink(MenuSecurityLink instance);
    partial void InsertMessageLevel(MessageLevel instance);
    partial void UpdateMessageLevel(MessageLevel instance);
    partial void DeleteMessageLevel(MessageLevel instance);
    partial void InsertModification(Modification instance);
    partial void UpdateModification(Modification instance);
    partial void DeleteModification(Modification instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPortTideTime(PortTideTime instance);
    partial void UpdatePortTideTime(PortTideTime instance);
    partial void DeletePortTideTime(PortTideTime instance);
    partial void InsertProcedureLog(ProcedureLog instance);
    partial void UpdateProcedureLog(ProcedureLog instance);
    partial void DeleteProcedureLog(ProcedureLog instance);
    partial void InsertProcedure(Procedure instance);
    partial void UpdateProcedure(Procedure instance);
    partial void DeleteProcedure(Procedure instance);
    partial void InsertRoleType(RoleType instance);
    partial void UpdateRoleType(RoleType instance);
    partial void DeleteRoleType(RoleType instance);
    partial void InsertScenario(Scenario instance);
    partial void UpdateScenario(Scenario instance);
    partial void DeleteScenario(Scenario instance);
    partial void InsertSchemaVersion(SchemaVersion instance);
    partial void UpdateSchemaVersion(SchemaVersion instance);
    partial void DeleteSchemaVersion(SchemaVersion instance);
    partial void InsertSecurityGroup(SecurityGroup instance);
    partial void UpdateSecurityGroup(SecurityGroup instance);
    partial void DeleteSecurityGroup(SecurityGroup instance);
    partial void InsertSession(Session instance);
    partial void UpdateSession(Session instance);
    partial void DeleteSession(Session instance);
    partial void InsertTidePort(TidePort instance);
    partial void UpdateTidePort(TidePort instance);
    partial void DeleteTidePort(TidePort instance);
    partial void InsertTripStatistic(TripStatistic instance);
    partial void UpdateTripStatistic(TripStatistic instance);
    partial void DeleteTripStatistic(TripStatistic instance);
    partial void InsertWCFEvent(WCFEvent instance);
    partial void UpdateWCFEvent(WCFEvent instance);
    partial void DeleteWCFEvent(WCFEvent instance);
    #endregion
		
		public CoastGuardDataContext() : 
				base(global::DBInterface.Properties.Settings.Default.CoastGuardConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public CoastGuardDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoastGuardDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoastGuardDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoastGuardDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<ActivityDestination> ActivityDestinations
		{
			get
			{
				return this.GetTable<ActivityDestination>();
			}
		}
		
		public System.Data.Linq.Table<ActivityDrillMember> ActivityDrillMembers
		{
			get
			{
				return this.GetTable<ActivityDrillMember>();
			}
		}
		
		public System.Data.Linq.Table<ActivityDrill> ActivityDrills
		{
			get
			{
				return this.GetTable<ActivityDrill>();
			}
		}
		
		public System.Data.Linq.Table<ActivityMember> ActivityMembers
		{
			get
			{
				return this.GetTable<ActivityMember>();
			}
		}
		
		public System.Data.Linq.Table<ActivityPassanger> ActivityPassangers
		{
			get
			{
				return this.GetTable<ActivityPassanger>();
			}
		}
		
		public System.Data.Linq.Table<ActivityScenarioMember> ActivityScenarioMembers
		{
			get
			{
				return this.GetTable<ActivityScenarioMember>();
			}
		}
		
		public System.Data.Linq.Table<ActivityScenario> ActivityScenarios
		{
			get
			{
				return this.GetTable<ActivityScenario>();
			}
		}
		
		public System.Data.Linq.Table<ActivityTrainerLink> ActivityTrainerLinks
		{
			get
			{
				return this.GetTable<ActivityTrainerLink>();
			}
		}
		
		public System.Data.Linq.Table<ActivityType> ActivityTypes
		{
			get
			{
				return this.GetTable<ActivityType>();
			}
		}
		
		public System.Data.Linq.Table<Alert> Alerts
		{
			get
			{
				return this.GetTable<Alert>();
			}
		}
		
		public System.Data.Linq.Table<Attachment> Attachments
		{
			get
			{
				return this.GetTable<Attachment>();
			}
		}
		
		public System.Data.Linq.Table<CoastGuardMember> CoastGuardMembers
		{
			get
			{
				return this.GetTable<CoastGuardMember>();
			}
		}
		
		public System.Data.Linq.Table<CoastguardRescueVessel> CoastguardRescueVessels
		{
			get
			{
				return this.GetTable<CoastguardRescueVessel>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<CRV_Engine> CRV_Engines
		{
			get
			{
				return this.GetTable<CRV_Engine>();
			}
		}
		
		public System.Data.Linq.Table<Custom_Field> Custom_Fields
		{
			get
			{
				return this.GetTable<Custom_Field>();
			}
		}
		
		public System.Data.Linq.Table<Custom_LookupItem> Custom_LookupItems
		{
			get
			{
				return this.GetTable<Custom_LookupItem>();
			}
		}
		
		public System.Data.Linq.Table<Custom_Lookup> Custom_Lookups
		{
			get
			{
				return this.GetTable<Custom_Lookup>();
			}
		}
		
		public System.Data.Linq.Table<Custom_Menu> Custom_Menus
		{
			get
			{
				return this.GetTable<Custom_Menu>();
			}
		}
		
		public System.Data.Linq.Table<Custom_MenuOption> Custom_MenuOptions
		{
			get
			{
				return this.GetTable<Custom_MenuOption>();
			}
		}
		
		public System.Data.Linq.Table<Custom_Table> Custom_Tables
		{
			get
			{
				return this.GetTable<Custom_Table>();
			}
		}
		
		public System.Data.Linq.Table<Destination> Destinations
		{
			get
			{
				return this.GetTable<Destination>();
			}
		}
		
		public System.Data.Linq.Table<DrilCourse> DrilCourses
		{
			get
			{
				return this.GetTable<DrilCourse>();
			}
		}
		
		public System.Data.Linq.Table<Drill> Drills
		{
			get
			{
				return this.GetTable<Drill>();
			}
		}
		
		public System.Data.Linq.Table<Engine> Engines
		{
			get
			{
				return this.GetTable<Engine>();
			}
		}
		
		public System.Data.Linq.Table<@enum> enums
		{
			get
			{
				return this.GetTable<@enum>();
			}
		}
		
		public System.Data.Linq.Table<enumValue> enumValues
		{
			get
			{
				return this.GetTable<enumValue>();
			}
		}
		
		public System.Data.Linq.Table<FileUploadStatus> FileUploadStatus
		{
			get
			{
				return this.GetTable<FileUploadStatus>();
			}
		}
		
		public System.Data.Linq.Table<MemberSetting> MemberSettings
		{
			get
			{
				return this.GetTable<MemberSetting>();
			}
		}
		
		public System.Data.Linq.Table<MenuSecurityLink> MenuSecurityLinks
		{
			get
			{
				return this.GetTable<MenuSecurityLink>();
			}
		}
		
		public System.Data.Linq.Table<MessageLevel> MessageLevels
		{
			get
			{
				return this.GetTable<MessageLevel>();
			}
		}
		
		public System.Data.Linq.Table<Modification> Modifications
		{
			get
			{
				return this.GetTable<Modification>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<PortTideTime> PortTideTimes
		{
			get
			{
				return this.GetTable<PortTideTime>();
			}
		}
		
		public System.Data.Linq.Table<ProcedureLog> ProcedureLogs
		{
			get
			{
				return this.GetTable<ProcedureLog>();
			}
		}
		
		public System.Data.Linq.Table<Procedure> Procedures
		{
			get
			{
				return this.GetTable<Procedure>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<RoleType> RoleTypes
		{
			get
			{
				return this.GetTable<RoleType>();
			}
		}
		
		public System.Data.Linq.Table<Scenario> Scenarios
		{
			get
			{
				return this.GetTable<Scenario>();
			}
		}
		
		public System.Data.Linq.Table<SchemaVersion> SchemaVersions
		{
			get
			{
				return this.GetTable<SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<SecurityGroup> SecurityGroups
		{
			get
			{
				return this.GetTable<SecurityGroup>();
			}
		}
		
		public System.Data.Linq.Table<Session> Sessions
		{
			get
			{
				return this.GetTable<Session>();
			}
		}
		
		public System.Data.Linq.Table<TidePort> TidePorts
		{
			get
			{
				return this.GetTable<TidePort>();
			}
		}
		
		public System.Data.Linq.Table<TripStatistic> TripStatistics
		{
			get
			{
				return this.GetTable<TripStatistic>();
			}
		}
		
		public System.Data.Linq.Table<TripStatisticsTotal> TripStatisticsTotals
		{
			get
			{
				return this.GetTable<TripStatisticsTotal>();
			}
		}
		
		public System.Data.Linq.Table<Unit> Units
		{
			get
			{
				return this.GetTable<Unit>();
			}
		}
		
		public System.Data.Linq.Table<WCFEvent> WCFEvents
		{
			get
			{
				return this.GetTable<WCFEvent>();
			}
		}
		
		public System.Data.Linq.Table<CalculateTripStatistic> CalculateTripStatistics
		{
			get
			{
				return this.GetTable<CalculateTripStatistic>();
			}
		}
		
		public System.Data.Linq.Table<ProcedureLastCompleted> ProcedureLastCompleteds
		{
			get
			{
				return this.GetTable<ProcedureLastCompleted>();
			}
		}
		
		public System.Data.Linq.Table<CoastguardRescueVesselDetail> CoastguardRescueVesselDetails
		{
			get
			{
				return this.GetTable<CoastguardRescueVesselDetail>();
			}
		}
		
		public System.Data.Linq.Table<CrewStatistic> CrewStatistics
		{
			get
			{
				return this.GetTable<CrewStatistic>();
			}
		}
		
		public System.Data.Linq.Table<CrewStatisticsTotal> CrewStatisticsTotals
		{
			get
			{
				return this.GetTable<CrewStatisticsTotal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activities")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.Guid> _Skipper;
		
		private System.Nullable<System.DateTime> _DepartTime;
		
		private System.Nullable<System.DateTime> _ReturnTime;
		
		private System.Nullable<int> _POB;
		
		private string _Weather;
		
		private string _UnusualWeather;
		
		private System.Nullable<decimal> _WaterTemp;
		
		private System.Nullable<decimal> _AirTemp;
		
		private System.Nullable<decimal> _BarometicPresure;
		
		private System.Nullable<bool> _StartupProcedures;
		
		private string _StartupProceduresComment;
		
		private string _StatupProceduresInitial;
		
		private System.Nullable<bool> _WeeklyChecks;
		
		private string _WeeklyChecksComment;
		
		private string _WeeklyChecksInitial;
		
		private System.Nullable<bool> _MonthlyChecks;
		
		private string _MonthlyChecksComment;
		
		private string _MonthlyChecksInitial;
		
		private System.Nullable<bool> _Maintenance;
		
		private string _MaintenanceComment;
		
		private string _MaintenanceInitial;
		
		private System.Nullable<bool> _SafetyCheck;
		
		private string _SafetyCheckComment;
		
		private string _SafetyCheckInitial;
		
		private System.Nullable<bool> _RadioCheck;
		
		private string _RadioCheckComments;
		
		private string _RadioCheckInitial;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private string _SecondaryWeather;
		
		private string _VoyageDetails;
		
		private System.Nullable<decimal> _EnginePortRunHours;
		
		private System.Nullable<decimal> _EnginePortTotalHours;
		
		private System.Nullable<decimal> _EnginePortOilAdded;
		
		private System.Nullable<decimal> _EngineStarboardRunHours;
		
		private System.Nullable<decimal> _EngineStarboardTotalHours;
		
		private System.Nullable<decimal> _EngineStarboardOilAdded;
		
		private System.Nullable<bool> _FirepumpStarted;
		
		private System.Nullable<bool> _PostOperationChecks;
		
		private System.Nullable<int> _NavHazards;
		
		private string _NavHazardsDetails;
		
		private string _Faults;
		
		private string _Actions;
		
		private System.Nullable<bool> _SafetyOfficerAdvised;
		
		private System.Nullable<System.DateTime> _DateSafetyOfficerAdvised;
		
		private System.Nullable<System.Guid> _CompletedBy;
		
		private System.Nullable<System.Guid> _ActivityType;
		
		private int _LogNo;
		
		private System.Nullable<int> _AdditionalPOB;
		
		private string _SeaState;
		
		private string _WindDirection;
		
		private string _Notes;
		
		private System.Nullable<decimal> _EngineFuelLitres;
		
		private System.Nullable<decimal> _EngineFuelDollars;
		
		private System.Nullable<System.Guid> _Trainer;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _CRV;
		
		private System.Nullable<System.Guid> _Unit;
		
		private System.Nullable<System.Guid> _EnginePort;
		
		private System.Nullable<System.Guid> _EngineStarboard;
		
		private System.Nullable<System.Guid> _EngineMiddle;
		
		private EntitySet<ActivityDestination> _ActivityDestinations;
		
		private EntitySet<ActivityDrill> _ActivityDrills;
		
		private EntitySet<ActivityMember> _ActivityMembers;
		
		private EntitySet<ActivityScenario> _ActivityScenarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnSkipperChanging(System.Nullable<System.Guid> value);
    partial void OnSkipperChanged();
    partial void OnDepartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDepartTimeChanged();
    partial void OnReturnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnTimeChanged();
    partial void OnPOBChanging(System.Nullable<int> value);
    partial void OnPOBChanged();
    partial void OnWeatherChanging(string value);
    partial void OnWeatherChanged();
    partial void OnUnusualWeatherChanging(string value);
    partial void OnUnusualWeatherChanged();
    partial void OnWaterTempChanging(System.Nullable<decimal> value);
    partial void OnWaterTempChanged();
    partial void OnAirTempChanging(System.Nullable<decimal> value);
    partial void OnAirTempChanged();
    partial void OnBarometicPresureChanging(System.Nullable<decimal> value);
    partial void OnBarometicPresureChanged();
    partial void OnStartupProceduresChanging(System.Nullable<bool> value);
    partial void OnStartupProceduresChanged();
    partial void OnStartupProceduresCommentChanging(string value);
    partial void OnStartupProceduresCommentChanged();
    partial void OnStatupProceduresInitialChanging(string value);
    partial void OnStatupProceduresInitialChanged();
    partial void OnWeeklyChecksChanging(System.Nullable<bool> value);
    partial void OnWeeklyChecksChanged();
    partial void OnWeeklyChecksCommentChanging(string value);
    partial void OnWeeklyChecksCommentChanged();
    partial void OnWeeklyChecksInitialChanging(string value);
    partial void OnWeeklyChecksInitialChanged();
    partial void OnMonthlyChecksChanging(System.Nullable<bool> value);
    partial void OnMonthlyChecksChanged();
    partial void OnMonthlyChecksCommentChanging(string value);
    partial void OnMonthlyChecksCommentChanged();
    partial void OnMonthlyChecksInitialChanging(string value);
    partial void OnMonthlyChecksInitialChanged();
    partial void OnMaintenanceChanging(System.Nullable<bool> value);
    partial void OnMaintenanceChanged();
    partial void OnMaintenanceCommentChanging(string value);
    partial void OnMaintenanceCommentChanged();
    partial void OnMaintenanceInitialChanging(string value);
    partial void OnMaintenanceInitialChanged();
    partial void OnSafetyCheckChanging(System.Nullable<bool> value);
    partial void OnSafetyCheckChanged();
    partial void OnSafetyCheckCommentChanging(string value);
    partial void OnSafetyCheckCommentChanged();
    partial void OnSafetyCheckInitialChanging(string value);
    partial void OnSafetyCheckInitialChanged();
    partial void OnRadioCheckChanging(System.Nullable<bool> value);
    partial void OnRadioCheckChanged();
    partial void OnRadioCheckCommentsChanging(string value);
    partial void OnRadioCheckCommentsChanged();
    partial void OnRadioCheckInitialChanging(string value);
    partial void OnRadioCheckInitialChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnSecondaryWeatherChanging(string value);
    partial void OnSecondaryWeatherChanged();
    partial void OnVoyageDetailsChanging(string value);
    partial void OnVoyageDetailsChanged();
    partial void OnEnginePortRunHoursChanging(System.Nullable<decimal> value);
    partial void OnEnginePortRunHoursChanged();
    partial void OnEnginePortTotalHoursChanging(System.Nullable<decimal> value);
    partial void OnEnginePortTotalHoursChanged();
    partial void OnEnginePortOilAddedChanging(System.Nullable<decimal> value);
    partial void OnEnginePortOilAddedChanged();
    partial void OnEngineStarboardRunHoursChanging(System.Nullable<decimal> value);
    partial void OnEngineStarboardRunHoursChanged();
    partial void OnEngineStarboardTotalHoursChanging(System.Nullable<decimal> value);
    partial void OnEngineStarboardTotalHoursChanged();
    partial void OnEngineStarboardOilAddedChanging(System.Nullable<decimal> value);
    partial void OnEngineStarboardOilAddedChanged();
    partial void OnFirepumpStartedChanging(System.Nullable<bool> value);
    partial void OnFirepumpStartedChanged();
    partial void OnPostOperationChecksChanging(System.Nullable<bool> value);
    partial void OnPostOperationChecksChanged();
    partial void OnNavHazardsChanging(System.Nullable<int> value);
    partial void OnNavHazardsChanged();
    partial void OnNavHazardsDetailsChanging(string value);
    partial void OnNavHazardsDetailsChanged();
    partial void OnFaultsChanging(string value);
    partial void OnFaultsChanged();
    partial void OnActionsChanging(string value);
    partial void OnActionsChanged();
    partial void OnSafetyOfficerAdvisedChanging(System.Nullable<bool> value);
    partial void OnSafetyOfficerAdvisedChanged();
    partial void OnDateSafetyOfficerAdvisedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSafetyOfficerAdvisedChanged();
    partial void OnCompletedByChanging(System.Nullable<System.Guid> value);
    partial void OnCompletedByChanged();
    partial void OnActivityTypeChanging(System.Nullable<System.Guid> value);
    partial void OnActivityTypeChanged();
    partial void OnLogNoChanging(int value);
    partial void OnLogNoChanged();
    partial void OnAdditionalPOBChanging(System.Nullable<int> value);
    partial void OnAdditionalPOBChanged();
    partial void OnSeaStateChanging(string value);
    partial void OnSeaStateChanged();
    partial void OnWindDirectionChanging(string value);
    partial void OnWindDirectionChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnEngineFuelLitresChanging(System.Nullable<decimal> value);
    partial void OnEngineFuelLitresChanged();
    partial void OnEngineFuelDollarsChanging(System.Nullable<decimal> value);
    partial void OnEngineFuelDollarsChanged();
    partial void OnTrainerChanging(System.Nullable<System.Guid> value);
    partial void OnTrainerChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnCRVChanging(System.Nullable<System.Guid> value);
    partial void OnCRVChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    partial void OnEnginePortChanging(System.Nullable<System.Guid> value);
    partial void OnEnginePortChanged();
    partial void OnEngineStarboardChanging(System.Nullable<System.Guid> value);
    partial void OnEngineStarboardChanged();
    partial void OnEngineMiddleChanging(System.Nullable<System.Guid> value);
    partial void OnEngineMiddleChanged();
    #endregion
		
		public Activity()
		{
			this._ActivityDestinations = new EntitySet<ActivityDestination>(new Action<ActivityDestination>(this.attach_ActivityDestinations), new Action<ActivityDestination>(this.detach_ActivityDestinations));
			this._ActivityDrills = new EntitySet<ActivityDrill>(new Action<ActivityDrill>(this.attach_ActivityDrills), new Action<ActivityDrill>(this.detach_ActivityDrills));
			this._ActivityMembers = new EntitySet<ActivityMember>(new Action<ActivityMember>(this.attach_ActivityMembers), new Action<ActivityMember>(this.detach_ActivityMembers));
			this._ActivityScenarios = new EntitySet<ActivityScenario>(new Action<ActivityScenario>(this.attach_ActivityScenarios), new Action<ActivityScenario>(this.detach_ActivityScenarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skipper", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Skipper
		{
			get
			{
				return this._Skipper;
			}
			set
			{
				if ((this._Skipper != value))
				{
					this.OnSkipperChanging(value);
					this.SendPropertyChanging();
					this._Skipper = value;
					this.SendPropertyChanged("Skipper");
					this.OnSkipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DepartTime
		{
			get
			{
				return this._DepartTime;
			}
			set
			{
				if ((this._DepartTime != value))
				{
					this.OnDepartTimeChanging(value);
					this.SendPropertyChanging();
					this._DepartTime = value;
					this.SendPropertyChanged("DepartTime");
					this.OnDepartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ReturnTime
		{
			get
			{
				return this._ReturnTime;
			}
			set
			{
				if ((this._ReturnTime != value))
				{
					this.OnReturnTimeChanging(value);
					this.SendPropertyChanging();
					this._ReturnTime = value;
					this.SendPropertyChanged("ReturnTime");
					this.OnReturnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POB", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> POB
		{
			get
			{
				return this._POB;
			}
			set
			{
				if ((this._POB != value))
				{
					this.OnPOBChanging(value);
					this.SendPropertyChanging();
					this._POB = value;
					this.SendPropertyChanged("POB");
					this.OnPOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weather", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Weather
		{
			get
			{
				return this._Weather;
			}
			set
			{
				if ((this._Weather != value))
				{
					this.OnWeatherChanging(value);
					this.SendPropertyChanging();
					this._Weather = value;
					this.SendPropertyChanged("Weather");
					this.OnWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnusualWeather", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string UnusualWeather
		{
			get
			{
				return this._UnusualWeather;
			}
			set
			{
				if ((this._UnusualWeather != value))
				{
					this.OnUnusualWeatherChanging(value);
					this.SendPropertyChanging();
					this._UnusualWeather = value;
					this.SendPropertyChanged("UnusualWeather");
					this.OnUnusualWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaterTemp", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> WaterTemp
		{
			get
			{
				return this._WaterTemp;
			}
			set
			{
				if ((this._WaterTemp != value))
				{
					this.OnWaterTempChanging(value);
					this.SendPropertyChanging();
					this._WaterTemp = value;
					this.SendPropertyChanged("WaterTemp");
					this.OnWaterTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AirTemp", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AirTemp
		{
			get
			{
				return this._AirTemp;
			}
			set
			{
				if ((this._AirTemp != value))
				{
					this.OnAirTempChanging(value);
					this.SendPropertyChanging();
					this._AirTemp = value;
					this.SendPropertyChanged("AirTemp");
					this.OnAirTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarometicPresure", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BarometicPresure
		{
			get
			{
				return this._BarometicPresure;
			}
			set
			{
				if ((this._BarometicPresure != value))
				{
					this.OnBarometicPresureChanging(value);
					this.SendPropertyChanging();
					this._BarometicPresure = value;
					this.SendPropertyChanged("BarometicPresure");
					this.OnBarometicPresureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartupProcedures", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> StartupProcedures
		{
			get
			{
				return this._StartupProcedures;
			}
			set
			{
				if ((this._StartupProcedures != value))
				{
					this.OnStartupProceduresChanging(value);
					this.SendPropertyChanging();
					this._StartupProcedures = value;
					this.SendPropertyChanged("StartupProcedures");
					this.OnStartupProceduresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartupProceduresComment", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string StartupProceduresComment
		{
			get
			{
				return this._StartupProceduresComment;
			}
			set
			{
				if ((this._StartupProceduresComment != value))
				{
					this.OnStartupProceduresCommentChanging(value);
					this.SendPropertyChanging();
					this._StartupProceduresComment = value;
					this.SendPropertyChanged("StartupProceduresComment");
					this.OnStartupProceduresCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatupProceduresInitial", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string StatupProceduresInitial
		{
			get
			{
				return this._StatupProceduresInitial;
			}
			set
			{
				if ((this._StatupProceduresInitial != value))
				{
					this.OnStatupProceduresInitialChanging(value);
					this.SendPropertyChanging();
					this._StatupProceduresInitial = value;
					this.SendPropertyChanged("StatupProceduresInitial");
					this.OnStatupProceduresInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyChecks", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> WeeklyChecks
		{
			get
			{
				return this._WeeklyChecks;
			}
			set
			{
				if ((this._WeeklyChecks != value))
				{
					this.OnWeeklyChecksChanging(value);
					this.SendPropertyChanging();
					this._WeeklyChecks = value;
					this.SendPropertyChanged("WeeklyChecks");
					this.OnWeeklyChecksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyChecksComment", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string WeeklyChecksComment
		{
			get
			{
				return this._WeeklyChecksComment;
			}
			set
			{
				if ((this._WeeklyChecksComment != value))
				{
					this.OnWeeklyChecksCommentChanging(value);
					this.SendPropertyChanging();
					this._WeeklyChecksComment = value;
					this.SendPropertyChanged("WeeklyChecksComment");
					this.OnWeeklyChecksCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeeklyChecksInitial", DbType="NChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string WeeklyChecksInitial
		{
			get
			{
				return this._WeeklyChecksInitial;
			}
			set
			{
				if ((this._WeeklyChecksInitial != value))
				{
					this.OnWeeklyChecksInitialChanging(value);
					this.SendPropertyChanging();
					this._WeeklyChecksInitial = value;
					this.SendPropertyChanged("WeeklyChecksInitial");
					this.OnWeeklyChecksInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyChecks", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> MonthlyChecks
		{
			get
			{
				return this._MonthlyChecks;
			}
			set
			{
				if ((this._MonthlyChecks != value))
				{
					this.OnMonthlyChecksChanging(value);
					this.SendPropertyChanging();
					this._MonthlyChecks = value;
					this.SendPropertyChanged("MonthlyChecks");
					this.OnMonthlyChecksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyChecksComment", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string MonthlyChecksComment
		{
			get
			{
				return this._MonthlyChecksComment;
			}
			set
			{
				if ((this._MonthlyChecksComment != value))
				{
					this.OnMonthlyChecksCommentChanging(value);
					this.SendPropertyChanging();
					this._MonthlyChecksComment = value;
					this.SendPropertyChanged("MonthlyChecksComment");
					this.OnMonthlyChecksCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyChecksInitial", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MonthlyChecksInitial
		{
			get
			{
				return this._MonthlyChecksInitial;
			}
			set
			{
				if ((this._MonthlyChecksInitial != value))
				{
					this.OnMonthlyChecksInitialChanging(value);
					this.SendPropertyChanging();
					this._MonthlyChecksInitial = value;
					this.SendPropertyChanged("MonthlyChecksInitial");
					this.OnMonthlyChecksInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maintenance", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Maintenance
		{
			get
			{
				return this._Maintenance;
			}
			set
			{
				if ((this._Maintenance != value))
				{
					this.OnMaintenanceChanging(value);
					this.SendPropertyChanging();
					this._Maintenance = value;
					this.SendPropertyChanged("Maintenance");
					this.OnMaintenanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceComment", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string MaintenanceComment
		{
			get
			{
				return this._MaintenanceComment;
			}
			set
			{
				if ((this._MaintenanceComment != value))
				{
					this.OnMaintenanceCommentChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceComment = value;
					this.SendPropertyChanged("MaintenanceComment");
					this.OnMaintenanceCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceInitial", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MaintenanceInitial
		{
			get
			{
				return this._MaintenanceInitial;
			}
			set
			{
				if ((this._MaintenanceInitial != value))
				{
					this.OnMaintenanceInitialChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceInitial = value;
					this.SendPropertyChanged("MaintenanceInitial");
					this.OnMaintenanceInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyCheck", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SafetyCheck
		{
			get
			{
				return this._SafetyCheck;
			}
			set
			{
				if ((this._SafetyCheck != value))
				{
					this.OnSafetyCheckChanging(value);
					this.SendPropertyChanging();
					this._SafetyCheck = value;
					this.SendPropertyChanged("SafetyCheck");
					this.OnSafetyCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyCheckComment", DbType="NVarChar(512) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SafetyCheckComment
		{
			get
			{
				return this._SafetyCheckComment;
			}
			set
			{
				if ((this._SafetyCheckComment != value))
				{
					this.OnSafetyCheckCommentChanging(value);
					this.SendPropertyChanging();
					this._SafetyCheckComment = value;
					this.SendPropertyChanged("SafetyCheckComment");
					this.OnSafetyCheckCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyCheckInitial", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SafetyCheckInitial
		{
			get
			{
				return this._SafetyCheckInitial;
			}
			set
			{
				if ((this._SafetyCheckInitial != value))
				{
					this.OnSafetyCheckInitialChanging(value);
					this.SendPropertyChanging();
					this._SafetyCheckInitial = value;
					this.SendPropertyChanged("SafetyCheckInitial");
					this.OnSafetyCheckInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioCheck", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> RadioCheck
		{
			get
			{
				return this._RadioCheck;
			}
			set
			{
				if ((this._RadioCheck != value))
				{
					this.OnRadioCheckChanging(value);
					this.SendPropertyChanging();
					this._RadioCheck = value;
					this.SendPropertyChanged("RadioCheck");
					this.OnRadioCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioCheckComments", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string RadioCheckComments
		{
			get
			{
				return this._RadioCheckComments;
			}
			set
			{
				if ((this._RadioCheckComments != value))
				{
					this.OnRadioCheckCommentsChanging(value);
					this.SendPropertyChanging();
					this._RadioCheckComments = value;
					this.SendPropertyChanged("RadioCheckComments");
					this.OnRadioCheckCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RadioCheckInitial", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RadioCheckInitial
		{
			get
			{
				return this._RadioCheckInitial;
			}
			set
			{
				if ((this._RadioCheckInitial != value))
				{
					this.OnRadioCheckInitialChanging(value);
					this.SendPropertyChanging();
					this._RadioCheckInitial = value;
					this.SendPropertyChanged("RadioCheckInitial");
					this.OnRadioCheckInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryWeather", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SecondaryWeather
		{
			get
			{
				return this._SecondaryWeather;
			}
			set
			{
				if ((this._SecondaryWeather != value))
				{
					this.OnSecondaryWeatherChanging(value);
					this.SendPropertyChanging();
					this._SecondaryWeather = value;
					this.SendPropertyChanged("SecondaryWeather");
					this.OnSecondaryWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoyageDetails", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string VoyageDetails
		{
			get
			{
				return this._VoyageDetails;
			}
			set
			{
				if ((this._VoyageDetails != value))
				{
					this.OnVoyageDetailsChanging(value);
					this.SendPropertyChanging();
					this._VoyageDetails = value;
					this.SendPropertyChanged("VoyageDetails");
					this.OnVoyageDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnginePortRunHours", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnginePortRunHours
		{
			get
			{
				return this._EnginePortRunHours;
			}
			set
			{
				if ((this._EnginePortRunHours != value))
				{
					this.OnEnginePortRunHoursChanging(value);
					this.SendPropertyChanging();
					this._EnginePortRunHours = value;
					this.SendPropertyChanged("EnginePortRunHours");
					this.OnEnginePortRunHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnginePortTotalHours", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnginePortTotalHours
		{
			get
			{
				return this._EnginePortTotalHours;
			}
			set
			{
				if ((this._EnginePortTotalHours != value))
				{
					this.OnEnginePortTotalHoursChanging(value);
					this.SendPropertyChanging();
					this._EnginePortTotalHours = value;
					this.SendPropertyChanged("EnginePortTotalHours");
					this.OnEnginePortTotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnginePortOilAdded", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EnginePortOilAdded
		{
			get
			{
				return this._EnginePortOilAdded;
			}
			set
			{
				if ((this._EnginePortOilAdded != value))
				{
					this.OnEnginePortOilAddedChanging(value);
					this.SendPropertyChanging();
					this._EnginePortOilAdded = value;
					this.SendPropertyChanged("EnginePortOilAdded");
					this.OnEnginePortOilAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineStarboardRunHours", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EngineStarboardRunHours
		{
			get
			{
				return this._EngineStarboardRunHours;
			}
			set
			{
				if ((this._EngineStarboardRunHours != value))
				{
					this.OnEngineStarboardRunHoursChanging(value);
					this.SendPropertyChanging();
					this._EngineStarboardRunHours = value;
					this.SendPropertyChanged("EngineStarboardRunHours");
					this.OnEngineStarboardRunHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineStarboardTotalHours", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EngineStarboardTotalHours
		{
			get
			{
				return this._EngineStarboardTotalHours;
			}
			set
			{
				if ((this._EngineStarboardTotalHours != value))
				{
					this.OnEngineStarboardTotalHoursChanging(value);
					this.SendPropertyChanging();
					this._EngineStarboardTotalHours = value;
					this.SendPropertyChanged("EngineStarboardTotalHours");
					this.OnEngineStarboardTotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineStarboardOilAdded", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EngineStarboardOilAdded
		{
			get
			{
				return this._EngineStarboardOilAdded;
			}
			set
			{
				if ((this._EngineStarboardOilAdded != value))
				{
					this.OnEngineStarboardOilAddedChanging(value);
					this.SendPropertyChanging();
					this._EngineStarboardOilAdded = value;
					this.SendPropertyChanged("EngineStarboardOilAdded");
					this.OnEngineStarboardOilAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirepumpStarted", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> FirepumpStarted
		{
			get
			{
				return this._FirepumpStarted;
			}
			set
			{
				if ((this._FirepumpStarted != value))
				{
					this.OnFirepumpStartedChanging(value);
					this.SendPropertyChanging();
					this._FirepumpStarted = value;
					this.SendPropertyChanged("FirepumpStarted");
					this.OnFirepumpStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostOperationChecks", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PostOperationChecks
		{
			get
			{
				return this._PostOperationChecks;
			}
			set
			{
				if ((this._PostOperationChecks != value))
				{
					this.OnPostOperationChecksChanging(value);
					this.SendPropertyChanging();
					this._PostOperationChecks = value;
					this.SendPropertyChanged("PostOperationChecks");
					this.OnPostOperationChecksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavHazards", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NavHazards
		{
			get
			{
				return this._NavHazards;
			}
			set
			{
				if ((this._NavHazards != value))
				{
					this.OnNavHazardsChanging(value);
					this.SendPropertyChanging();
					this._NavHazards = value;
					this.SendPropertyChanged("NavHazards");
					this.OnNavHazardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NavHazardsDetails", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string NavHazardsDetails
		{
			get
			{
				return this._NavHazardsDetails;
			}
			set
			{
				if ((this._NavHazardsDetails != value))
				{
					this.OnNavHazardsDetailsChanging(value);
					this.SendPropertyChanging();
					this._NavHazardsDetails = value;
					this.SendPropertyChanged("NavHazardsDetails");
					this.OnNavHazardsDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faults", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Faults
		{
			get
			{
				return this._Faults;
			}
			set
			{
				if ((this._Faults != value))
				{
					this.OnFaultsChanging(value);
					this.SendPropertyChanging();
					this._Faults = value;
					this.SendPropertyChanged("Faults");
					this.OnFaultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actions", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Actions
		{
			get
			{
				return this._Actions;
			}
			set
			{
				if ((this._Actions != value))
				{
					this.OnActionsChanging(value);
					this.SendPropertyChanging();
					this._Actions = value;
					this.SendPropertyChanged("Actions");
					this.OnActionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyOfficerAdvised", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SafetyOfficerAdvised
		{
			get
			{
				return this._SafetyOfficerAdvised;
			}
			set
			{
				if ((this._SafetyOfficerAdvised != value))
				{
					this.OnSafetyOfficerAdvisedChanging(value);
					this.SendPropertyChanging();
					this._SafetyOfficerAdvised = value;
					this.SendPropertyChanged("SafetyOfficerAdvised");
					this.OnSafetyOfficerAdvisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSafetyOfficerAdvised", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateSafetyOfficerAdvised
		{
			get
			{
				return this._DateSafetyOfficerAdvised;
			}
			set
			{
				if ((this._DateSafetyOfficerAdvised != value))
				{
					this.OnDateSafetyOfficerAdvisedChanging(value);
					this.SendPropertyChanging();
					this._DateSafetyOfficerAdvised = value;
					this.SendPropertyChanged("DateSafetyOfficerAdvised");
					this.OnDateSafetyOfficerAdvisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletedBy", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CompletedBy
		{
			get
			{
				return this._CompletedBy;
			}
			set
			{
				if ((this._CompletedBy != value))
				{
					this.OnCompletedByChanging(value);
					this.SendPropertyChanging();
					this._CompletedBy = value;
					this.SendPropertyChanged("CompletedBy");
					this.OnCompletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityType", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ActivityType
		{
			get
			{
				return this._ActivityType;
			}
			set
			{
				if ((this._ActivityType != value))
				{
					this.OnActivityTypeChanging(value);
					this.SendPropertyChanging();
					this._ActivityType = value;
					this.SendPropertyChanged("ActivityType");
					this.OnActivityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogNo", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LogNo
		{
			get
			{
				return this._LogNo;
			}
			set
			{
				if ((this._LogNo != value))
				{
					this.OnLogNoChanging(value);
					this.SendPropertyChanging();
					this._LogNo = value;
					this.SendPropertyChanged("LogNo");
					this.OnLogNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalPOB", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AdditionalPOB
		{
			get
			{
				return this._AdditionalPOB;
			}
			set
			{
				if ((this._AdditionalPOB != value))
				{
					this.OnAdditionalPOBChanging(value);
					this.SendPropertyChanging();
					this._AdditionalPOB = value;
					this.SendPropertyChanged("AdditionalPOB");
					this.OnAdditionalPOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeaState", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string SeaState
		{
			get
			{
				return this._SeaState;
			}
			set
			{
				if ((this._SeaState != value))
				{
					this.OnSeaStateChanging(value);
					this.SendPropertyChanging();
					this._SeaState = value;
					this.SendPropertyChanged("SeaState");
					this.OnSeaStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindDirection", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string WindDirection
		{
			get
			{
				return this._WindDirection;
			}
			set
			{
				if ((this._WindDirection != value))
				{
					this.OnWindDirectionChanging(value);
					this.SendPropertyChanging();
					this._WindDirection = value;
					this.SendPropertyChanged("WindDirection");
					this.OnWindDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineFuelLitres", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EngineFuelLitres
		{
			get
			{
				return this._EngineFuelLitres;
			}
			set
			{
				if ((this._EngineFuelLitres != value))
				{
					this.OnEngineFuelLitresChanging(value);
					this.SendPropertyChanging();
					this._EngineFuelLitres = value;
					this.SendPropertyChanged("EngineFuelLitres");
					this.OnEngineFuelLitresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineFuelDollars", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> EngineFuelDollars
		{
			get
			{
				return this._EngineFuelDollars;
			}
			set
			{
				if ((this._EngineFuelDollars != value))
				{
					this.OnEngineFuelDollarsChanging(value);
					this.SendPropertyChanging();
					this._EngineFuelDollars = value;
					this.SendPropertyChanged("EngineFuelDollars");
					this.OnEngineFuelDollarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trainer", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Trainer
		{
			get
			{
				return this._Trainer;
			}
			set
			{
				if ((this._Trainer != value))
				{
					this.OnTrainerChanging(value);
					this.SendPropertyChanging();
					this._Trainer = value;
					this.SendPropertyChanged("Trainer");
					this.OnTrainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRV", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> CRV
		{
			get
			{
				return this._CRV;
			}
			set
			{
				if ((this._CRV != value))
				{
					this.OnCRVChanging(value);
					this.SendPropertyChanging();
					this._CRV = value;
					this.SendPropertyChanged("CRV");
					this.OnCRVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnginePort", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EnginePort
		{
			get
			{
				return this._EnginePort;
			}
			set
			{
				if ((this._EnginePort != value))
				{
					this.OnEnginePortChanging(value);
					this.SendPropertyChanging();
					this._EnginePort = value;
					this.SendPropertyChanged("EnginePort");
					this.OnEnginePortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineStarboard", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EngineStarboard
		{
			get
			{
				return this._EngineStarboard;
			}
			set
			{
				if ((this._EngineStarboard != value))
				{
					this.OnEngineStarboardChanging(value);
					this.SendPropertyChanging();
					this._EngineStarboard = value;
					this.SendPropertyChanged("EngineStarboard");
					this.OnEngineStarboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineMiddle", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> EngineMiddle
		{
			get
			{
				return this._EngineMiddle;
			}
			set
			{
				if ((this._EngineMiddle != value))
				{
					this.OnEngineMiddleChanging(value);
					this.SendPropertyChanging();
					this._EngineMiddle = value;
					this.SendPropertyChanged("EngineMiddle");
					this.OnEngineMiddleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityDestination", Storage="_ActivityDestinations", ThisKey="id", OtherKey="Activity")]
		public EntitySet<ActivityDestination> ActivityDestinations
		{
			get
			{
				return this._ActivityDestinations;
			}
			set
			{
				this._ActivityDestinations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityDrill", Storage="_ActivityDrills", ThisKey="id", OtherKey="Activity")]
		public EntitySet<ActivityDrill> ActivityDrills
		{
			get
			{
				return this._ActivityDrills;
			}
			set
			{
				this._ActivityDrills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityMember", Storage="_ActivityMembers", ThisKey="id", OtherKey="Tripid")]
		public EntitySet<ActivityMember> ActivityMembers
		{
			get
			{
				return this._ActivityMembers;
			}
			set
			{
				this._ActivityMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityScenario", Storage="_ActivityScenarios", ThisKey="id", OtherKey="Activity")]
		public EntitySet<ActivityScenario> ActivityScenarios
		{
			get
			{
				return this._ActivityScenarios;
			}
			set
			{
				this._ActivityScenarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityDestinations(ActivityDestination entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = this;
		}
		
		private void detach_ActivityDestinations(ActivityDestination entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = null;
		}
		
		private void attach_ActivityDrills(ActivityDrill entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = this;
		}
		
		private void detach_ActivityDrills(ActivityDrill entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = null;
		}
		
		private void attach_ActivityMembers(ActivityMember entity)
		{
			this.SendPropertyChanging();
			entity.Activity = this;
		}
		
		private void detach_ActivityMembers(ActivityMember entity)
		{
			this.SendPropertyChanging();
			entity.Activity = null;
		}
		
		private void attach_ActivityScenarios(ActivityScenario entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = this;
		}
		
		private void detach_ActivityScenarios(ActivityScenario entity)
		{
			this.SendPropertyChanging();
			entity.Activity1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityDestinations")]
	public partial class ActivityDestination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _Activity;
		
		private System.Guid _Destination;
		
		private EntityRef<Activity> _Activity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnActivityChanging(System.Guid value);
    partial void OnActivityChanged();
    partial void OnDestinationChanging(System.Guid value);
    partial void OnDestinationChanged();
    #endregion
		
		public ActivityDestination()
		{
			this._Activity1 = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					if (this._Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Destination", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Destination
		{
			get
			{
				return this._Destination;
			}
			set
			{
				if ((this._Destination != value))
				{
					this.OnDestinationChanging(value);
					this.SendPropertyChanging();
					this._Destination = value;
					this.SendPropertyChanged("Destination");
					this.OnDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityDestination", Storage="_Activity1", ThisKey="Activity", OtherKey="id", IsForeignKey=true)]
		public Activity Activity1
		{
			get
			{
				return this._Activity1.Entity;
			}
			set
			{
				Activity previousValue = this._Activity1.Entity;
				if (((previousValue != value) 
							|| (this._Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity1.Entity = null;
						previousValue.ActivityDestinations.Remove(this);
					}
					this._Activity1.Entity = value;
					if ((value != null))
					{
						value.ActivityDestinations.Add(this);
						this._Activity = value.id;
					}
					else
					{
						this._Activity = default(System.Guid);
					}
					this.SendPropertyChanged("Activity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityDrillMembers")]
	public partial class ActivityDrillMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _RoleId;
		
		private System.Guid _ActivityDrill;
		
		private System.Guid _MemberId;
		
		private EntityRef<ActivityDrill> _ActivityDrill1;
		
		private EntityRef<CoastGuardMember> _CoastGuardMember;
		
		private EntityRef<RoleType> _RoleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnActivityDrillChanging(System.Guid value);
    partial void OnActivityDrillChanged();
    partial void OnMemberIdChanging(System.Guid value);
    partial void OnMemberIdChanged();
    #endregion
		
		public ActivityDrillMember()
		{
			this._ActivityDrill1 = default(EntityRef<ActivityDrill>);
			this._CoastGuardMember = default(EntityRef<CoastGuardMember>);
			this._RoleType = default(EntityRef<RoleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._RoleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityDrill", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivityDrill
		{
			get
			{
				return this._ActivityDrill;
			}
			set
			{
				if ((this._ActivityDrill != value))
				{
					if (this._ActivityDrill1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityDrillChanging(value);
					this.SendPropertyChanging();
					this._ActivityDrill = value;
					this.SendPropertyChanged("ActivityDrill");
					this.OnActivityDrillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._CoastGuardMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityDrill_ActivityDrillMember", Storage="_ActivityDrill1", ThisKey="ActivityDrill", OtherKey="id", IsForeignKey=true)]
		public ActivityDrill ActivityDrill1
		{
			get
			{
				return this._ActivityDrill1.Entity;
			}
			set
			{
				ActivityDrill previousValue = this._ActivityDrill1.Entity;
				if (((previousValue != value) 
							|| (this._ActivityDrill1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityDrill1.Entity = null;
						previousValue.ActivityDrillMembers.Remove(this);
					}
					this._ActivityDrill1.Entity = value;
					if ((value != null))
					{
						value.ActivityDrillMembers.Add(this);
						this._ActivityDrill = value.id;
					}
					else
					{
						this._ActivityDrill = default(System.Guid);
					}
					this.SendPropertyChanged("ActivityDrill1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_ActivityDrillMember", Storage="_CoastGuardMember", ThisKey="MemberId", OtherKey="id", IsForeignKey=true)]
		public CoastGuardMember CoastGuardMember
		{
			get
			{
				return this._CoastGuardMember.Entity;
			}
			set
			{
				CoastGuardMember previousValue = this._CoastGuardMember.Entity;
				if (((previousValue != value) 
							|| (this._CoastGuardMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoastGuardMember.Entity = null;
						previousValue.ActivityDrillMembers.Remove(this);
					}
					this._CoastGuardMember.Entity = value;
					if ((value != null))
					{
						value.ActivityDrillMembers.Add(this);
						this._MemberId = value.id;
					}
					else
					{
						this._MemberId = default(System.Guid);
					}
					this.SendPropertyChanged("CoastGuardMember");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_ActivityDrillMember", Storage="_RoleType", ThisKey="RoleId", OtherKey="id", IsForeignKey=true)]
		public RoleType RoleType
		{
			get
			{
				return this._RoleType.Entity;
			}
			set
			{
				RoleType previousValue = this._RoleType.Entity;
				if (((previousValue != value) 
							|| (this._RoleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleType.Entity = null;
						previousValue.ActivityDrillMembers.Remove(this);
					}
					this._RoleType.Entity = value;
					if ((value != null))
					{
						value.ActivityDrillMembers.Add(this);
						this._RoleId = value.id;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("RoleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityDrills")]
	public partial class ActivityDrill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _DrillId;
		
		private System.Guid _Activity;
		
		private EntitySet<ActivityDrillMember> _ActivityDrillMembers;
		
		private EntityRef<Activity> _Activity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnDrillIdChanging(System.Guid value);
    partial void OnDrillIdChanged();
    partial void OnActivityChanging(System.Guid value);
    partial void OnActivityChanged();
    #endregion
		
		public ActivityDrill()
		{
			this._ActivityDrillMembers = new EntitySet<ActivityDrillMember>(new Action<ActivityDrillMember>(this.attach_ActivityDrillMembers), new Action<ActivityDrillMember>(this.detach_ActivityDrillMembers));
			this._Activity1 = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DrillId
		{
			get
			{
				return this._DrillId;
			}
			set
			{
				if ((this._DrillId != value))
				{
					this.OnDrillIdChanging(value);
					this.SendPropertyChanging();
					this._DrillId = value;
					this.SendPropertyChanged("DrillId");
					this.OnDrillIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					if (this._Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityDrill_ActivityDrillMember", Storage="_ActivityDrillMembers", ThisKey="id", OtherKey="ActivityDrill")]
		public EntitySet<ActivityDrillMember> ActivityDrillMembers
		{
			get
			{
				return this._ActivityDrillMembers;
			}
			set
			{
				this._ActivityDrillMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityDrill", Storage="_Activity1", ThisKey="Activity", OtherKey="id", IsForeignKey=true)]
		public Activity Activity1
		{
			get
			{
				return this._Activity1.Entity;
			}
			set
			{
				Activity previousValue = this._Activity1.Entity;
				if (((previousValue != value) 
							|| (this._Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity1.Entity = null;
						previousValue.ActivityDrills.Remove(this);
					}
					this._Activity1.Entity = value;
					if ((value != null))
					{
						value.ActivityDrills.Add(this);
						this._Activity = value.id;
					}
					else
					{
						this._Activity = default(System.Guid);
					}
					this.SendPropertyChanged("Activity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityDrillMembers(ActivityDrillMember entity)
		{
			this.SendPropertyChanging();
			entity.ActivityDrill1 = this;
		}
		
		private void detach_ActivityDrillMembers(ActivityDrillMember entity)
		{
			this.SendPropertyChanging();
			entity.ActivityDrill1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityMember")]
	public partial class ActivityMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _Tripid;
		
		private System.Guid _MemberId;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntityRef<Activity> _Activity;
		
		private EntityRef<CoastGuardMember> _CoastGuardMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnTripidChanging(System.Guid value);
    partial void OnTripidChanged();
    partial void OnMemberIdChanging(System.Guid value);
    partial void OnMemberIdChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public ActivityMember()
		{
			this._Activity = default(EntityRef<Activity>);
			this._CoastGuardMember = default(EntityRef<CoastGuardMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tripid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Tripid
		{
			get
			{
				return this._Tripid;
			}
			set
			{
				if ((this._Tripid != value))
				{
					if (this._Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTripidChanging(value);
					this.SendPropertyChanging();
					this._Tripid = value;
					this.SendPropertyChanged("Tripid");
					this.OnTripidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._CoastGuardMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityMember", Storage="_Activity", ThisKey="Tripid", OtherKey="id", IsForeignKey=true)]
		public Activity Activity
		{
			get
			{
				return this._Activity.Entity;
			}
			set
			{
				Activity previousValue = this._Activity.Entity;
				if (((previousValue != value) 
							|| (this._Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity.Entity = null;
						previousValue.ActivityMembers.Remove(this);
					}
					this._Activity.Entity = value;
					if ((value != null))
					{
						value.ActivityMembers.Add(this);
						this._Tripid = value.id;
					}
					else
					{
						this._Tripid = default(System.Guid);
					}
					this.SendPropertyChanged("Activity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_ActivityMember", Storage="_CoastGuardMember", ThisKey="MemberId", OtherKey="id", IsForeignKey=true)]
		public CoastGuardMember CoastGuardMember
		{
			get
			{
				return this._CoastGuardMember.Entity;
			}
			set
			{
				CoastGuardMember previousValue = this._CoastGuardMember.Entity;
				if (((previousValue != value) 
							|| (this._CoastGuardMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoastGuardMember.Entity = null;
						previousValue.ActivityMembers.Remove(this);
					}
					this._CoastGuardMember.Entity = value;
					if ((value != null))
					{
						value.ActivityMembers.Add(this);
						this._MemberId = value.id;
					}
					else
					{
						this._MemberId = default(System.Guid);
					}
					this.SendPropertyChanged("CoastGuardMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityPassangers")]
	public partial class ActivityPassanger : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _Activity;
		
		private System.Nullable<System.Guid> _Person;
		
		private string _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnActivityChanging(System.Guid value);
    partial void OnActivityChanged();
    partial void OnPersonChanging(System.Nullable<System.Guid> value);
    partial void OnPersonChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public ActivityPassanger()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Person
		{
			get
			{
				return this._Person;
			}
			set
			{
				if ((this._Person != value))
				{
					this.OnPersonChanging(value);
					this.SendPropertyChanging();
					this._Person = value;
					this.SendPropertyChanged("Person");
					this.OnPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(256)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityScenarioMembers")]
	public partial class ActivityScenarioMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _ActivityScenario;
		
		private System.Guid _Role;
		
		private System.Guid _Member;
		
		private EntityRef<CoastGuardMember> _CoastGuardMember;
		
		private EntityRef<RoleType> _RoleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnActivityScenarioChanging(System.Guid value);
    partial void OnActivityScenarioChanged();
    partial void OnRoleChanging(System.Guid value);
    partial void OnRoleChanged();
    partial void OnMemberChanging(System.Guid value);
    partial void OnMemberChanged();
    #endregion
		
		public ActivityScenarioMember()
		{
			this._CoastGuardMember = default(EntityRef<CoastGuardMember>);
			this._RoleType = default(EntityRef<RoleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityScenario", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ActivityScenario
		{
			get
			{
				return this._ActivityScenario;
			}
			set
			{
				if ((this._ActivityScenario != value))
				{
					this.OnActivityScenarioChanging(value);
					this.SendPropertyChanging();
					this._ActivityScenario = value;
					this.SendPropertyChanged("ActivityScenario");
					this.OnActivityScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					if (this._RoleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Member
		{
			get
			{
				return this._Member;
			}
			set
			{
				if ((this._Member != value))
				{
					if (this._CoastGuardMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberChanging(value);
					this.SendPropertyChanging();
					this._Member = value;
					this.SendPropertyChanged("Member");
					this.OnMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_ActivityScenarioMember", Storage="_CoastGuardMember", ThisKey="Member", OtherKey="id", IsForeignKey=true)]
		public CoastGuardMember CoastGuardMember
		{
			get
			{
				return this._CoastGuardMember.Entity;
			}
			set
			{
				CoastGuardMember previousValue = this._CoastGuardMember.Entity;
				if (((previousValue != value) 
							|| (this._CoastGuardMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoastGuardMember.Entity = null;
						previousValue.ActivityScenarioMembers.Remove(this);
					}
					this._CoastGuardMember.Entity = value;
					if ((value != null))
					{
						value.ActivityScenarioMembers.Add(this);
						this._Member = value.id;
					}
					else
					{
						this._Member = default(System.Guid);
					}
					this.SendPropertyChanged("CoastGuardMember");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_ActivityScenarioMember", Storage="_RoleType", ThisKey="Role", OtherKey="id", IsForeignKey=true)]
		public RoleType RoleType
		{
			get
			{
				return this._RoleType.Entity;
			}
			set
			{
				RoleType previousValue = this._RoleType.Entity;
				if (((previousValue != value) 
							|| (this._RoleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleType.Entity = null;
						previousValue.ActivityScenarioMembers.Remove(this);
					}
					this._RoleType.Entity = value;
					if ((value != null))
					{
						value.ActivityScenarioMembers.Add(this);
						this._Role = value.id;
					}
					else
					{
						this._Role = default(System.Guid);
					}
					this.SendPropertyChanged("RoleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityScenarios")]
	public partial class ActivityScenario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _Activity;
		
		private System.Guid _Scenario;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntityRef<Activity> _Activity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnActivityChanging(System.Guid value);
    partial void OnActivityChanged();
    partial void OnScenarioChanging(System.Guid value);
    partial void OnScenarioChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public ActivityScenario()
		{
			this._Activity1 = default(EntityRef<Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					if (this._Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scenario", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Scenario
		{
			get
			{
				return this._Scenario;
			}
			set
			{
				if ((this._Scenario != value))
				{
					this.OnScenarioChanging(value);
					this.SendPropertyChanging();
					this._Scenario = value;
					this.SendPropertyChanged("Scenario");
					this.OnScenarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activity_ActivityScenario", Storage="_Activity1", ThisKey="Activity", OtherKey="id", IsForeignKey=true)]
		public Activity Activity1
		{
			get
			{
				return this._Activity1.Entity;
			}
			set
			{
				Activity previousValue = this._Activity1.Entity;
				if (((previousValue != value) 
							|| (this._Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activity1.Entity = null;
						previousValue.ActivityScenarios.Remove(this);
					}
					this._Activity1.Entity = value;
					if ((value != null))
					{
						value.ActivityScenarios.Add(this);
						this._Activity = value.id;
					}
					else
					{
						this._Activity = default(System.Guid);
					}
					this.SendPropertyChanged("Activity1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityTrainerLink")]
	public partial class ActivityTrainerLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _Activity;
		
		private System.Nullable<System.Guid> _PersonRecordId;
		
		private System.Nullable<System.Guid> _PersonEntityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnActivityChanging(System.Nullable<System.Guid> value);
    partial void OnActivityChanged();
    partial void OnPersonRecordIdChanging(System.Nullable<System.Guid> value);
    partial void OnPersonRecordIdChanged();
    partial void OnPersonEntityIDChanging(System.Nullable<System.Guid> value);
    partial void OnPersonEntityIDChanged();
    #endregion
		
		public ActivityTrainerLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonRecordId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonRecordId
		{
			get
			{
				return this._PersonRecordId;
			}
			set
			{
				if ((this._PersonRecordId != value))
				{
					this.OnPersonRecordIdChanging(value);
					this.SendPropertyChanging();
					this._PersonRecordId = value;
					this.SendPropertyChanged("PersonRecordId");
					this.OnPersonRecordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonEntityID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PersonEntityID
		{
			get
			{
				return this._PersonEntityID;
			}
			set
			{
				if ((this._PersonEntityID != value))
				{
					this.OnPersonEntityIDChanging(value);
					this.SendPropertyChanging();
					this._PersonEntityID = value;
					this.SendPropertyChanged("PersonEntityID");
					this.OnPersonEntityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityTypes")]
	public partial class ActivityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _IsWaterBased;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnIsWaterBasedChanging(System.Nullable<bool> value);
    partial void OnIsWaterBasedChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public ActivityType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaterBased", DbType="Bit")]
		public System.Nullable<bool> IsWaterBased
		{
			get
			{
				return this._IsWaterBased;
			}
			set
			{
				if ((this._IsWaterBased != value))
				{
					this.OnIsWaterBasedChanging(value);
					this.SendPropertyChanging();
					this._IsWaterBased = value;
					this.SendPropertyChanged("IsWaterBased");
					this.OnIsWaterBasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Alerts")]
	public partial class Alert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Fields;
		
		private string _Text;
		
		private System.Nullable<bool> _Deleted;
		
		private string _Where;
		
		private int _Level;
		
		private string _Tables;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFieldsChanging(string value);
    partial void OnFieldsChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnWhereChanging(string value);
    partial void OnWhereChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnTablesChanging(string value);
    partial void OnTablesChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Alert()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fields", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Fields
		{
			get
			{
				return this._Fields;
			}
			set
			{
				if ((this._Fields != value))
				{
					this.OnFieldsChanging(value);
					this.SendPropertyChanging();
					this._Fields = value;
					this.SendPropertyChanged("Fields");
					this.OnFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Where]", Storage="_Where", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Where
		{
			get
			{
				return this._Where;
			}
			set
			{
				if ((this._Where != value))
				{
					this.OnWhereChanging(value);
					this.SendPropertyChanging();
					this._Where = value;
					this.SendPropertyChanged("Where");
					this.OnWhereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tables", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Tables
		{
			get
			{
				return this._Tables;
			}
			set
			{
				if ((this._Tables != value))
				{
					this.OnTablesChanging(value);
					this.SendPropertyChanging();
					this._Tables = value;
					this.SendPropertyChanged("Tables");
					this.OnTablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachments")]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _DateUpdated;
		
		private System.DateTime _DateCreated;
		
		private string _Name;
		
		private string _Path;
		
		private string _Type;
		
		private string _Description;
		
		private string _ParentType;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Nullable<int> _Bytes;
		
		private System.Nullable<System.Guid> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnDateUpdatedChanging(System.DateTime value);
    partial void OnDateUpdatedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnParentTypeChanging(string value);
    partial void OnParentTypeChanged();
    partial void OnParentIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentIdChanged();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnBytesChanging(System.Nullable<int> value);
    partial void OnBytesChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    #endregion
		
		public Attachment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(512) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(512) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentType", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ParentType
		{
			get
			{
				return this._ParentType;
			}
			set
			{
				if ((this._ParentType != value))
				{
					this.OnParentTypeChanging(value);
					this.SendPropertyChanging();
					this._ParentType = value;
					this.SendPropertyChanged("ParentType");
					this.OnParentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion", CanBeNull=true, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bytes", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Bytes
		{
			get
			{
				return this._Bytes;
			}
			set
			{
				if ((this._Bytes != value))
				{
					this.OnBytesChanging(value);
					this.SendPropertyChanging();
					this._Bytes = value;
					this.SendPropertyChanged("Bytes");
					this.OnBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoastGuardMembers")]
	public partial class CoastGuardMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _UserId;
		
		private string _Password;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Mobile;
		
		private string _Home;
		
		private string _Work;
		
		private string _email;
		
		private System.Nullable<bool> _Skipper;
		
		private System.Nullable<bool> _Trainee;
		
		private System.Nullable<bool> _Operational;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Senior;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private System.Nullable<System.DateTime> _DateJoined;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _Unit;
		
		private EntitySet<ActivityDrillMember> _ActivityDrillMembers;
		
		private EntitySet<ActivityMember> _ActivityMembers;
		
		private EntitySet<ActivityScenarioMember> _ActivityScenarioMembers;
		
		private EntityRef<MemberSetting> _MemberSetting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnHomeChanging(string value);
    partial void OnHomeChanged();
    partial void OnWorkChanging(string value);
    partial void OnWorkChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnSkipperChanging(System.Nullable<bool> value);
    partial void OnSkipperChanged();
    partial void OnTraineeChanging(System.Nullable<bool> value);
    partial void OnTraineeChanged();
    partial void OnOperationalChanging(System.Nullable<bool> value);
    partial void OnOperationalChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnSeniorChanging(System.Nullable<bool> value);
    partial void OnSeniorChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnDateJoinedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateJoinedChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public CoastGuardMember()
		{
			this._ActivityDrillMembers = new EntitySet<ActivityDrillMember>(new Action<ActivityDrillMember>(this.attach_ActivityDrillMembers), new Action<ActivityDrillMember>(this.detach_ActivityDrillMembers));
			this._ActivityMembers = new EntitySet<ActivityMember>(new Action<ActivityMember>(this.attach_ActivityMembers), new Action<ActivityMember>(this.detach_ActivityMembers));
			this._ActivityScenarioMembers = new EntitySet<ActivityScenarioMember>(new Action<ActivityScenarioMember>(this.attach_ActivityScenarioMembers), new Action<ActivityScenarioMember>(this.detach_ActivityScenarioMembers));
			this._MemberSetting = default(EntityRef<MemberSetting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Home
		{
			get
			{
				return this._Home;
			}
			set
			{
				if ((this._Home != value))
				{
					this.OnHomeChanging(value);
					this.SendPropertyChanging();
					this._Home = value;
					this.SendPropertyChanged("Home");
					this.OnHomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Work]", Storage="_Work", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Work
		{
			get
			{
				return this._Work;
			}
			set
			{
				if ((this._Work != value))
				{
					this.OnWorkChanging(value);
					this.SendPropertyChanging();
					this._Work = value;
					this.SendPropertyChanged("Work");
					this.OnWorkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skipper", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Skipper
		{
			get
			{
				return this._Skipper;
			}
			set
			{
				if ((this._Skipper != value))
				{
					this.OnSkipperChanging(value);
					this.SendPropertyChanging();
					this._Skipper = value;
					this.SendPropertyChanged("Skipper");
					this.OnSkipperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trainee", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Trainee
		{
			get
			{
				return this._Trainee;
			}
			set
			{
				if ((this._Trainee != value))
				{
					this.OnTraineeChanging(value);
					this.SendPropertyChanging();
					this._Trainee = value;
					this.SendPropertyChanged("Trainee");
					this.OnTraineeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operational", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Operational
		{
			get
			{
				return this._Operational;
			}
			set
			{
				if ((this._Operational != value))
				{
					this.OnOperationalChanging(value);
					this.SendPropertyChanging();
					this._Operational = value;
					this.SendPropertyChanged("Operational");
					this.OnOperationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senior", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Senior
		{
			get
			{
				return this._Senior;
			}
			set
			{
				if ((this._Senior != value))
				{
					this.OnSeniorChanging(value);
					this.SendPropertyChanging();
					this._Senior = value;
					this.SendPropertyChanged("Senior");
					this.OnSeniorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateJoined", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateJoined
		{
			get
			{
				return this._DateJoined;
			}
			set
			{
				if ((this._DateJoined != value))
				{
					this.OnDateJoinedChanging(value);
					this.SendPropertyChanging();
					this._DateJoined = value;
					this.SendPropertyChanged("DateJoined");
					this.OnDateJoinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_ActivityDrillMember", Storage="_ActivityDrillMembers", ThisKey="id", OtherKey="MemberId")]
		public EntitySet<ActivityDrillMember> ActivityDrillMembers
		{
			get
			{
				return this._ActivityDrillMembers;
			}
			set
			{
				this._ActivityDrillMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_ActivityMember", Storage="_ActivityMembers", ThisKey="id", OtherKey="MemberId")]
		public EntitySet<ActivityMember> ActivityMembers
		{
			get
			{
				return this._ActivityMembers;
			}
			set
			{
				this._ActivityMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_ActivityScenarioMember", Storage="_ActivityScenarioMembers", ThisKey="id", OtherKey="Member")]
		public EntitySet<ActivityScenarioMember> ActivityScenarioMembers
		{
			get
			{
				return this._ActivityScenarioMembers;
			}
			set
			{
				this._ActivityScenarioMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_MemberSetting", Storage="_MemberSetting", ThisKey="id", OtherKey="MemberId", IsUnique=true, IsForeignKey=false)]
		public MemberSetting MemberSetting
		{
			get
			{
				return this._MemberSetting.Entity;
			}
			set
			{
				MemberSetting previousValue = this._MemberSetting.Entity;
				if (((previousValue != value) 
							|| (this._MemberSetting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberSetting.Entity = null;
						previousValue.CoastGuardMember = null;
					}
					this._MemberSetting.Entity = value;
					if ((value != null))
					{
						value.CoastGuardMember = this;
					}
					this.SendPropertyChanged("MemberSetting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityDrillMembers(ActivityDrillMember entity)
		{
			this.SendPropertyChanging();
			entity.CoastGuardMember = this;
		}
		
		private void detach_ActivityDrillMembers(ActivityDrillMember entity)
		{
			this.SendPropertyChanging();
			entity.CoastGuardMember = null;
		}
		
		private void attach_ActivityMembers(ActivityMember entity)
		{
			this.SendPropertyChanging();
			entity.CoastGuardMember = this;
		}
		
		private void detach_ActivityMembers(ActivityMember entity)
		{
			this.SendPropertyChanging();
			entity.CoastGuardMember = null;
		}
		
		private void attach_ActivityScenarioMembers(ActivityScenarioMember entity)
		{
			this.SendPropertyChanging();
			entity.CoastGuardMember = this;
		}
		
		private void detach_ActivityScenarioMembers(ActivityScenarioMember entity)
		{
			this.SendPropertyChanging();
			entity.CoastGuardMember = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoastguardRescueVessel")]
	public partial class CoastguardRescueVessel
	{
		
		private System.Guid _id;
		
		private string _name;
		
		private System.Guid _Unit;
		
		public CoastguardRescueVessel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _Unit;
		
		private EntitySet<DrilCourse> _DrilCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Course()
		{
			this._DrilCourses = new EntitySet<DrilCourse>(new Action<DrilCourse>(this.attach_DrilCourses), new Action<DrilCourse>(this.detach_DrilCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_DrilCourse", Storage="_DrilCourses", ThisKey="Id", OtherKey="CourseID")]
		public EntitySet<DrilCourse> DrilCourses
		{
			get
			{
				return this._DrilCourses;
			}
			set
			{
				this._DrilCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DrilCourses(DrilCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_DrilCourses(DrilCourse entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CRV_Engine")]
	public partial class CRV_Engine
	{
		
		private System.Guid _id;
		
		private System.Guid _CRV;
		
		private System.Guid _Engine;
		
		private int _Position;
		
		private bool _Active;
		
		private int _CurrentHours;
		
		public CRV_Engine()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRV", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CRV
		{
			get
			{
				return this._CRV;
			}
			set
			{
				if ((this._CRV != value))
				{
					this._CRV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Engine", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Engine
		{
			get
			{
				return this._Engine;
			}
			set
			{
				if ((this._Engine != value))
				{
					this._Engine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentHours", DbType="Int NOT NULL")]
		public int CurrentHours
		{
			get
			{
				return this._CurrentHours;
			}
			set
			{
				if ((this._CurrentHours != value))
				{
					this._CurrentHours = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_Fields")]
	public partial class Custom_Field
	{
		
		private System.Guid _id;
		
		private string _TableName;
		
		private string _FieldName;
		
		private string _Caption;
		
		private string _Type;
		
		private System.Nullable<int> _Order;
		
		public Custom_Field()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this._FieldName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(MAX)")]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this._Caption = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order]", Storage="_Order", DbType="Int")]
		public System.Nullable<int> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				if ((this._Order != value))
				{
					this._Order = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_LookupItems")]
	public partial class Custom_LookupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _TypeName;
		
		private string _Text;
		
		private System.Guid _Lookup;
		
		private System.Nullable<int> _SortOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnLookupChanging(System.Guid value);
    partial void OnLookupChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Custom_LookupItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lookup", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Lookup
		{
			get
			{
				return this._Lookup;
			}
			set
			{
				if ((this._Lookup != value))
				{
					this.OnLookupChanging(value);
					this.SendPropertyChanging();
					this._Lookup = value;
					this.SendPropertyChanged("Lookup");
					this.OnLookupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_Lookups")]
	public partial class Custom_Lookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private System.Nullable<bool> _Deleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public Custom_Lookup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_Menu")]
	public partial class Custom_Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Title;
		
		private int _height;
		
		private int _width;
		
		private System.Nullable<System.Guid> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnheightChanging(int value);
    partial void OnheightChanged();
    partial void OnwidthChanging(int value);
    partial void OnwidthChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    #endregion
		
		public Custom_Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="Int NOT NULL")]
		public int height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_width", DbType="Int NOT NULL")]
		public int width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnwidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("width");
					this.OnwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_MenuOptions")]
	public partial class Custom_MenuOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private int _type;
		
		private System.Nullable<System.Guid> _menu;
		
		private string _link;
		
		private int _sortorder;
		
		private System.Nullable<System.Guid> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OnmenuChanging(System.Nullable<System.Guid> value);
    partial void OnmenuChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnsortorderChanging(int value);
    partial void OnsortorderChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    #endregion
		
		public Custom_MenuOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_menu", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> menu
		{
			get
			{
				return this._menu;
			}
			set
			{
				if ((this._menu != value))
				{
					this.OnmenuChanging(value);
					this.SendPropertyChanging();
					this._menu = value;
					this.SendPropertyChanged("menu");
					this.OnmenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(256)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortorder", DbType="Int NOT NULL")]
		public int sortorder
		{
			get
			{
				return this._sortorder;
			}
			set
			{
				if ((this._sortorder != value))
				{
					this.OnsortorderChanging(value);
					this.SendPropertyChanging();
					this._sortorder = value;
					this.SendPropertyChanged("sortorder");
					this.OnsortorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom_Tables")]
	public partial class Custom_Table
	{
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Description;
		
		public Custom_Table()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Destinations")]
	public partial class Destination : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<int> _LogCount;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnLogCountChanging(System.Nullable<int> value);
    partial void OnLogCountChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Destination()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCount", DbType="Int")]
		public System.Nullable<int> LogCount
		{
			get
			{
				return this._LogCount;
			}
			set
			{
				if ((this._LogCount != value))
				{
					this.OnLogCountChanging(value);
					this.SendPropertyChanging();
					this._LogCount = value;
					this.SendPropertyChanged("LogCount");
					this.OnLogCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrilCourses")]
	public partial class DrilCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DrillCourseID;
		
		private System.Guid _DrillID;
		
		private System.Guid _CourseID;
		
		private System.Nullable<System.Guid> _Region;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Drill> _Drill;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrillCourseIDChanging(System.Guid value);
    partial void OnDrillCourseIDChanged();
    partial void OnDrillIDChanging(System.Guid value);
    partial void OnDrillIDChanged();
    partial void OnCourseIDChanging(System.Guid value);
    partial void OnCourseIDChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    #endregion
		
		public DrilCourse()
		{
			this._Course = default(EntityRef<Course>);
			this._Drill = default(EntityRef<Drill>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillCourseID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DrillCourseID
		{
			get
			{
				return this._DrillCourseID;
			}
			set
			{
				if ((this._DrillCourseID != value))
				{
					this.OnDrillCourseIDChanging(value);
					this.SendPropertyChanging();
					this._DrillCourseID = value;
					this.SendPropertyChanged("DrillCourseID");
					this.OnDrillCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrillID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DrillID
		{
			get
			{
				return this._DrillID;
			}
			set
			{
				if ((this._DrillID != value))
				{
					if (this._Drill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDrillIDChanging(value);
					this.SendPropertyChanging();
					this._DrillID = value;
					this.SendPropertyChanged("DrillID");
					this.OnDrillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_DrilCourse", Storage="_Course", ThisKey="CourseID", OtherKey="Id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.DrilCourses.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.DrilCourses.Add(this);
						this._CourseID = value.Id;
					}
					else
					{
						this._CourseID = default(System.Guid);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drill_DrilCourse", Storage="_Drill", ThisKey="DrillID", OtherKey="id", IsForeignKey=true)]
		public Drill Drill
		{
			get
			{
				return this._Drill.Entity;
			}
			set
			{
				Drill previousValue = this._Drill.Entity;
				if (((previousValue != value) 
							|| (this._Drill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drill.Entity = null;
						previousValue.DrilCourses.Remove(this);
					}
					this._Drill.Entity = value;
					if ((value != null))
					{
						value.DrilCourses.Add(this);
						this._DrillID = value.id;
					}
					else
					{
						this._DrillID = default(System.Guid);
					}
					this.SendPropertyChanged("Drill");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drills")]
	public partial class Drill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.Guid> _Unit;
		
		private EntitySet<DrilCourse> _DrilCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Drill()
		{
			this._DrilCourses = new EntitySet<DrilCourse>(new Action<DrilCourse>(this.attach_DrilCourses), new Action<DrilCourse>(this.detach_DrilCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(120) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drill_DrilCourse", Storage="_DrilCourses", ThisKey="id", OtherKey="DrillID")]
		public EntitySet<DrilCourse> DrilCourses
		{
			get
			{
				return this._DrilCourses;
			}
			set
			{
				this._DrilCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DrilCourses(DrilCourse entity)
		{
			this.SendPropertyChanging();
			entity.Drill = this;
		}
		
		private void detach_DrilCourses(DrilCourse entity)
		{
			this.SendPropertyChanging();
			entity.Drill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Engine")]
	public partial class Engine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _SerialNumber;
		
		private decimal _Hours;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.Guid> _unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnHoursChanging(decimal value);
    partial void OnHoursChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnunitChanging(System.Nullable<System.Guid> value);
    partial void OnunitChanged();
    #endregion
		
		public Engine()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Decimal(18,2) NOT NULL")]
		public decimal Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.enums")]
	public partial class @enum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public @enum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.enumValues")]
	public partial class enumValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private int _Value;
		
		private System.Guid _type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OntypeChanging(System.Guid value);
    partial void OntypeChanged();
    #endregion
		
		public enumValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileUploadStatus")]
	public partial class FileUploadStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _DateUploadStart;
		
		private System.Nullable<System.DateTime> _DateUploadComplete;
		
		private System.Nullable<long> _TotalBytes;
		
		private System.Nullable<long> _BytesUploaded;
		
		private string _FileName;
		
		private string _Path;
		
		private System.Nullable<int> _session;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnDateUploadStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUploadStartChanged();
    partial void OnDateUploadCompleteChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUploadCompleteChanged();
    partial void OnTotalBytesChanging(System.Nullable<long> value);
    partial void OnTotalBytesChanged();
    partial void OnBytesUploadedChanging(System.Nullable<long> value);
    partial void OnBytesUploadedChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnsessionChanging(System.Nullable<int> value);
    partial void OnsessionChanged();
    #endregion
		
		public FileUploadStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUploadStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUploadStart
		{
			get
			{
				return this._DateUploadStart;
			}
			set
			{
				if ((this._DateUploadStart != value))
				{
					this.OnDateUploadStartChanging(value);
					this.SendPropertyChanging();
					this._DateUploadStart = value;
					this.SendPropertyChanged("DateUploadStart");
					this.OnDateUploadStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUploadComplete", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUploadComplete
		{
			get
			{
				return this._DateUploadComplete;
			}
			set
			{
				if ((this._DateUploadComplete != value))
				{
					this.OnDateUploadCompleteChanging(value);
					this.SendPropertyChanging();
					this._DateUploadComplete = value;
					this.SendPropertyChanged("DateUploadComplete");
					this.OnDateUploadCompleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBytes", DbType="BigInt")]
		public System.Nullable<long> TotalBytes
		{
			get
			{
				return this._TotalBytes;
			}
			set
			{
				if ((this._TotalBytes != value))
				{
					this.OnTotalBytesChanging(value);
					this.SendPropertyChanging();
					this._TotalBytes = value;
					this.SendPropertyChanged("TotalBytes");
					this.OnTotalBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesUploaded", DbType="BigInt")]
		public System.Nullable<long> BytesUploaded
		{
			get
			{
				return this._BytesUploaded;
			}
			set
			{
				if ((this._BytesUploaded != value))
				{
					this.OnBytesUploadedChanging(value);
					this.SendPropertyChanging();
					this._BytesUploaded = value;
					this.SendPropertyChanged("BytesUploaded");
					this.OnBytesUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(512)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(512)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session", DbType="Int")]
		public System.Nullable<int> session
		{
			get
			{
				return this._session;
			}
			set
			{
				if ((this._session != value))
				{
					this.OnsessionChanging(value);
					this.SendPropertyChanging();
					this._session = value;
					this.SendPropertyChanged("session");
					this.OnsessionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberSettings")]
	public partial class MemberSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MemberId;
		
		private System.Nullable<bool> _LogEnabled;
		
		private System.Nullable<int> _LogLevel;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private string _Timeformat;
		
		private string _DateFormat;
		
		private System.Nullable<System.Guid> _TimeZone;
		
		private EntityRef<CoastGuardMember> _CoastGuardMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIdChanging(System.Guid value);
    partial void OnMemberIdChanged();
    partial void OnLogEnabledChanging(System.Nullable<bool> value);
    partial void OnLogEnabledChanged();
    partial void OnLogLevelChanging(System.Nullable<int> value);
    partial void OnLogLevelChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnTimeformatChanging(string value);
    partial void OnTimeformatChanged();
    partial void OnDateFormatChanging(string value);
    partial void OnDateFormatChanged();
    partial void OnTimeZoneChanging(System.Nullable<System.Guid> value);
    partial void OnTimeZoneChanged();
    #endregion
		
		public MemberSetting()
		{
			this._CoastGuardMember = default(EntityRef<CoastGuardMember>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._CoastGuardMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEnabled", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> LogEnabled
		{
			get
			{
				return this._LogEnabled;
			}
			set
			{
				if ((this._LogEnabled != value))
				{
					this.OnLogEnabledChanging(value);
					this.SendPropertyChanging();
					this._LogEnabled = value;
					this.SendPropertyChanged("LogEnabled");
					this.OnLogEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogLevel", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LogLevel
		{
			get
			{
				return this._LogLevel;
			}
			set
			{
				if ((this._LogLevel != value))
				{
					this.OnLogLevelChanging(value);
					this.SendPropertyChanging();
					this._LogLevel = value;
					this.SendPropertyChanged("LogLevel");
					this.OnLogLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timeformat", DbType="NChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string Timeformat
		{
			get
			{
				return this._Timeformat;
			}
			set
			{
				if ((this._Timeformat != value))
				{
					this.OnTimeformatChanging(value);
					this.SendPropertyChanging();
					this._Timeformat = value;
					this.SendPropertyChanged("Timeformat");
					this.OnTimeformatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFormat", DbType="NChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DateFormat
		{
			get
			{
				return this._DateFormat;
			}
			set
			{
				if ((this._DateFormat != value))
				{
					this.OnDateFormatChanging(value);
					this.SendPropertyChanging();
					this._DateFormat = value;
					this.SendPropertyChanged("DateFormat");
					this.OnDateFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZone", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TimeZone
		{
			get
			{
				return this._TimeZone;
			}
			set
			{
				if ((this._TimeZone != value))
				{
					this.OnTimeZoneChanging(value);
					this.SendPropertyChanging();
					this._TimeZone = value;
					this.SendPropertyChanged("TimeZone");
					this.OnTimeZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CoastGuardMember_MemberSetting", Storage="_CoastGuardMember", ThisKey="MemberId", OtherKey="id", IsForeignKey=true)]
		public CoastGuardMember CoastGuardMember
		{
			get
			{
				return this._CoastGuardMember.Entity;
			}
			set
			{
				CoastGuardMember previousValue = this._CoastGuardMember.Entity;
				if (((previousValue != value) 
							|| (this._CoastGuardMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CoastGuardMember.Entity = null;
						previousValue.MemberSetting = null;
					}
					this._CoastGuardMember.Entity = value;
					if ((value != null))
					{
						value.MemberSetting = this;
						this._MemberId = value.id;
					}
					else
					{
						this._MemberId = default(System.Guid);
					}
					this.SendPropertyChanged("CoastGuardMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuSecurityLink")]
	public partial class MenuSecurityLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private int _AccessType;
		
		private System.Guid _AccessObject;
		
		private int _AccessLevel;
		
		private System.Nullable<System.Guid> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnAccessTypeChanging(int value);
    partial void OnAccessTypeChanged();
    partial void OnAccessObjectChanging(System.Guid value);
    partial void OnAccessObjectChanged();
    partial void OnAccessLevelChanging(int value);
    partial void OnAccessLevelChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    #endregion
		
		public MenuSecurityLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="Int NOT NULL")]
		public int AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this.OnAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessType = value;
					this.SendPropertyChanged("AccessType");
					this.OnAccessTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessObject", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccessObject
		{
			get
			{
				return this._AccessObject;
			}
			set
			{
				if ((this._AccessObject != value))
				{
					this.OnAccessObjectChanging(value);
					this.SendPropertyChanging();
					this._AccessObject = value;
					this.SendPropertyChanged("AccessObject");
					this.OnAccessObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessLevel", DbType="Int NOT NULL")]
		public int AccessLevel
		{
			get
			{
				return this._AccessLevel;
			}
			set
			{
				if ((this._AccessLevel != value))
				{
					this.OnAccessLevelChanging(value);
					this.SendPropertyChanging();
					this._AccessLevel = value;
					this.SendPropertyChanged("AccessLevel");
					this.OnAccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageLevels")]
	public partial class MessageLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public MessageLevel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modifications")]
	public partial class Modification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _RaisedBy;
		
		private System.Nullable<System.Guid> _OwnedBy;
		
		private System.Nullable<System.Guid> _Assigned;
		
		private System.Nullable<System.Guid> _Priority;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _EstimatedHourss;
		
		private System.Nullable<int> _ActualHours;
		
		private System.Nullable<System.DateTime> _Due;
		
		private System.Nullable<System.DateTime> _Created;
		
		private System.Nullable<System.DateTime> _Assessed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnRaisedByChanging(System.Nullable<System.Guid> value);
    partial void OnRaisedByChanged();
    partial void OnOwnedByChanging(System.Nullable<System.Guid> value);
    partial void OnOwnedByChanged();
    partial void OnAssignedChanging(System.Nullable<System.Guid> value);
    partial void OnAssignedChanged();
    partial void OnPriorityChanging(System.Nullable<System.Guid> value);
    partial void OnPriorityChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnEstimatedHourssChanging(System.Nullable<int> value);
    partial void OnEstimatedHourssChanged();
    partial void OnActualHoursChanging(System.Nullable<int> value);
    partial void OnActualHoursChanged();
    partial void OnDueChanging(System.Nullable<System.DateTime> value);
    partial void OnDueChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnAssessedChanging(System.Nullable<System.DateTime> value);
    partial void OnAssessedChanged();
    #endregion
		
		public Modification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaisedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> RaisedBy
		{
			get
			{
				return this._RaisedBy;
			}
			set
			{
				if ((this._RaisedBy != value))
				{
					this.OnRaisedByChanging(value);
					this.SendPropertyChanging();
					this._RaisedBy = value;
					this.SendPropertyChanged("RaisedBy");
					this.OnRaisedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnedBy", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> OwnedBy
		{
			get
			{
				return this._OwnedBy;
			}
			set
			{
				if ((this._OwnedBy != value))
				{
					this.OnOwnedByChanging(value);
					this.SendPropertyChanging();
					this._OwnedBy = value;
					this.SendPropertyChanged("OwnedBy");
					this.OnOwnedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedHourss", DbType="Int")]
		public System.Nullable<int> EstimatedHourss
		{
			get
			{
				return this._EstimatedHourss;
			}
			set
			{
				if ((this._EstimatedHourss != value))
				{
					this.OnEstimatedHourssChanging(value);
					this.SendPropertyChanging();
					this._EstimatedHourss = value;
					this.SendPropertyChanged("EstimatedHourss");
					this.OnEstimatedHourssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualHours", DbType="Int")]
		public System.Nullable<int> ActualHours
		{
			get
			{
				return this._ActualHours;
			}
			set
			{
				if ((this._ActualHours != value))
				{
					this.OnActualHoursChanging(value);
					this.SendPropertyChanging();
					this._ActualHours = value;
					this.SendPropertyChanged("ActualHours");
					this.OnActualHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Due", DbType="Date")]
		public System.Nullable<System.DateTime> Due
		{
			get
			{
				return this._Due;
			}
			set
			{
				if ((this._Due != value))
				{
					this.OnDueChanging(value);
					this.SendPropertyChanging();
					this._Due = value;
					this.SendPropertyChanged("Due");
					this.OnDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="Date")]
		public System.Nullable<System.DateTime> Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assessed", DbType="Date")]
		public System.Nullable<System.DateTime> Assessed
		{
			get
			{
				return this._Assessed;
			}
			set
			{
				if ((this._Assessed != value))
				{
					this.OnAssessedChanging(value);
					this.SendPropertyChanging();
					this._Assessed = value;
					this.SendPropertyChanged("Assessed");
					this.OnAssessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Title;
		
		private string _HomePhone;
		
		private string _MobilePhone;
		
		private string _WorkPhone;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Person()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(256)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(256)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(20)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="NVarChar(20)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortTideTimes")]
	public partial class PortTideTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.DateTime> _Time1;
		
		private System.Nullable<decimal> _H1;
		
		private System.Nullable<System.DateTime> _Time2;
		
		private System.Nullable<decimal> _H2;
		
		private System.Nullable<System.DateTime> _Time3;
		
		private System.Nullable<decimal> _H3;
		
		private System.Nullable<System.DateTime> _Time4;
		
		private System.Nullable<decimal> _H4;
		
		private System.Nullable<System.DateTime> _PTime1;
		
		private System.Nullable<decimal> _PH1;
		
		private System.Nullable<System.DateTime> _PTime2;
		
		private System.Nullable<decimal> _PH2;
		
		private System.Nullable<System.DateTime> _NTime1;
		
		private System.Nullable<decimal> _NH1;
		
		private System.Nullable<System.DateTime> _NTime2;
		
		private System.Nullable<System.Guid> _Port;
		
		private System.Nullable<decimal> _NH2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTime1Changing(System.Nullable<System.DateTime> value);
    partial void OnTime1Changed();
    partial void OnH1Changing(System.Nullable<decimal> value);
    partial void OnH1Changed();
    partial void OnTime2Changing(System.Nullable<System.DateTime> value);
    partial void OnTime2Changed();
    partial void OnH2Changing(System.Nullable<decimal> value);
    partial void OnH2Changed();
    partial void OnTime3Changing(System.Nullable<System.DateTime> value);
    partial void OnTime3Changed();
    partial void OnH3Changing(System.Nullable<decimal> value);
    partial void OnH3Changed();
    partial void OnTime4Changing(System.Nullable<System.DateTime> value);
    partial void OnTime4Changed();
    partial void OnH4Changing(System.Nullable<decimal> value);
    partial void OnH4Changed();
    partial void OnPTime1Changing(System.Nullable<System.DateTime> value);
    partial void OnPTime1Changed();
    partial void OnPH1Changing(System.Nullable<decimal> value);
    partial void OnPH1Changed();
    partial void OnPTime2Changing(System.Nullable<System.DateTime> value);
    partial void OnPTime2Changed();
    partial void OnPH2Changing(System.Nullable<decimal> value);
    partial void OnPH2Changed();
    partial void OnNTime1Changing(System.Nullable<System.DateTime> value);
    partial void OnNTime1Changed();
    partial void OnNH1Changing(System.Nullable<decimal> value);
    partial void OnNH1Changed();
    partial void OnNTime2Changing(System.Nullable<System.DateTime> value);
    partial void OnNTime2Changed();
    partial void OnPortChanging(System.Nullable<System.Guid> value);
    partial void OnPortChanged();
    partial void OnNH2Changing(System.Nullable<decimal> value);
    partial void OnNH2Changed();
    #endregion
		
		public PortTideTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time1", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time1
		{
			get
			{
				return this._Time1;
			}
			set
			{
				if ((this._Time1 != value))
				{
					this.OnTime1Changing(value);
					this.SendPropertyChanging();
					this._Time1 = value;
					this.SendPropertyChanged("Time1");
					this.OnTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> H1
		{
			get
			{
				return this._H1;
			}
			set
			{
				if ((this._H1 != value))
				{
					this.OnH1Changing(value);
					this.SendPropertyChanging();
					this._H1 = value;
					this.SendPropertyChanged("H1");
					this.OnH1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time2", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time2
		{
			get
			{
				return this._Time2;
			}
			set
			{
				if ((this._Time2 != value))
				{
					this.OnTime2Changing(value);
					this.SendPropertyChanging();
					this._Time2 = value;
					this.SendPropertyChanged("Time2");
					this.OnTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> H2
		{
			get
			{
				return this._H2;
			}
			set
			{
				if ((this._H2 != value))
				{
					this.OnH2Changing(value);
					this.SendPropertyChanging();
					this._H2 = value;
					this.SendPropertyChanged("H2");
					this.OnH2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time3", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time3
		{
			get
			{
				return this._Time3;
			}
			set
			{
				if ((this._Time3 != value))
				{
					this.OnTime3Changing(value);
					this.SendPropertyChanging();
					this._Time3 = value;
					this.SendPropertyChanged("Time3");
					this.OnTime3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H3", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> H3
		{
			get
			{
				return this._H3;
			}
			set
			{
				if ((this._H3 != value))
				{
					this.OnH3Changing(value);
					this.SendPropertyChanging();
					this._H3 = value;
					this.SendPropertyChanged("H3");
					this.OnH3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time4", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time4
		{
			get
			{
				return this._Time4;
			}
			set
			{
				if ((this._Time4 != value))
				{
					this.OnTime4Changing(value);
					this.SendPropertyChanging();
					this._Time4 = value;
					this.SendPropertyChanged("Time4");
					this.OnTime4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H4", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> H4
		{
			get
			{
				return this._H4;
			}
			set
			{
				if ((this._H4 != value))
				{
					this.OnH4Changing(value);
					this.SendPropertyChanging();
					this._H4 = value;
					this.SendPropertyChanged("H4");
					this.OnH4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTime1", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTime1
		{
			get
			{
				return this._PTime1;
			}
			set
			{
				if ((this._PTime1 != value))
				{
					this.OnPTime1Changing(value);
					this.SendPropertyChanging();
					this._PTime1 = value;
					this.SendPropertyChanged("PTime1");
					this.OnPTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PH1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PH1
		{
			get
			{
				return this._PH1;
			}
			set
			{
				if ((this._PH1 != value))
				{
					this.OnPH1Changing(value);
					this.SendPropertyChanging();
					this._PH1 = value;
					this.SendPropertyChanged("PH1");
					this.OnPH1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTime2", DbType="DateTime")]
		public System.Nullable<System.DateTime> PTime2
		{
			get
			{
				return this._PTime2;
			}
			set
			{
				if ((this._PTime2 != value))
				{
					this.OnPTime2Changing(value);
					this.SendPropertyChanging();
					this._PTime2 = value;
					this.SendPropertyChanged("PTime2");
					this.OnPTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PH2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PH2
		{
			get
			{
				return this._PH2;
			}
			set
			{
				if ((this._PH2 != value))
				{
					this.OnPH2Changing(value);
					this.SendPropertyChanging();
					this._PH2 = value;
					this.SendPropertyChanged("PH2");
					this.OnPH2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NTime1", DbType="DateTime")]
		public System.Nullable<System.DateTime> NTime1
		{
			get
			{
				return this._NTime1;
			}
			set
			{
				if ((this._NTime1 != value))
				{
					this.OnNTime1Changing(value);
					this.SendPropertyChanging();
					this._NTime1 = value;
					this.SendPropertyChanged("NTime1");
					this.OnNTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NH1", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NH1
		{
			get
			{
				return this._NH1;
			}
			set
			{
				if ((this._NH1 != value))
				{
					this.OnNH1Changing(value);
					this.SendPropertyChanging();
					this._NH1 = value;
					this.SendPropertyChanged("NH1");
					this.OnNH1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NTime2", DbType="DateTime")]
		public System.Nullable<System.DateTime> NTime2
		{
			get
			{
				return this._NTime2;
			}
			set
			{
				if ((this._NTime2 != value))
				{
					this.OnNTime2Changing(value);
					this.SendPropertyChanging();
					this._NTime2 = value;
					this.SendPropertyChanged("NTime2");
					this.OnNTime2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NH2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NH2
		{
			get
			{
				return this._NH2;
			}
			set
			{
				if ((this._NH2 != value))
				{
					this.OnNH2Changing(value);
					this.SendPropertyChanging();
					this._NH2 = value;
					this.SendPropertyChanged("NH2");
					this.OnNH2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcedureLog")]
	public partial class ProcedureLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _ProcedureId;
		
		private System.Guid _MemberId;
		
		private System.DateTime _DateCompleted;
		
		private string _Comments;
		
		private System.Nullable<System.Guid> _ActivityId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnProcedureIdChanging(System.Guid value);
    partial void OnProcedureIdChanged();
    partial void OnMemberIdChanging(System.Guid value);
    partial void OnMemberIdChanged();
    partial void OnDateCompletedChanging(System.DateTime value);
    partial void OnDateCompletedChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnActivityIdChanging(System.Nullable<System.Guid> value);
    partial void OnActivityIdChanged();
    #endregion
		
		public ProcedureLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcedureId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProcedureId
		{
			get
			{
				return this._ProcedureId;
			}
			set
			{
				if ((this._ProcedureId != value))
				{
					this.OnProcedureIdChanging(value);
					this.SendPropertyChanging();
					this._ProcedureId = value;
					this.SendPropertyChanged("ProcedureId");
					this.OnProcedureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="DateTime NOT NULL")]
		public System.DateTime DateCompleted
		{
			get
			{
				return this._DateCompleted;
			}
			set
			{
				if ((this._DateCompleted != value))
				{
					this.OnDateCompletedChanging(value);
					this.SendPropertyChanging();
					this._DateCompleted = value;
					this.SendPropertyChanged("DateCompleted");
					this.OnDateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this._ActivityId;
			}
			set
			{
				if ((this._ActivityId != value))
				{
					this.OnActivityIdChanging(value);
					this.SendPropertyChanging();
					this._ActivityId = value;
					this.SendPropertyChanged("ActivityId");
					this.OnActivityIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procedures")]
	public partial class Procedure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private int _Type;
		
		private System.Nullable<bool> _Deleted;
		
		private string _Description;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Procedure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region
	{
		
		private System.Guid _id;
		
		private string _Name;
		
		public Region()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Report
	{
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Views;
		
		private string _Parameters;
		
		public Report()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="VarChar(MAX)")]
		public string Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this._Views = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="VarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this._Parameters = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleTypes")]
	public partial class RoleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.Guid> _Unit;
		
		private EntitySet<ActivityDrillMember> _ActivityDrillMembers;
		
		private EntitySet<ActivityScenarioMember> _ActivityScenarioMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public RoleType()
		{
			this._ActivityDrillMembers = new EntitySet<ActivityDrillMember>(new Action<ActivityDrillMember>(this.attach_ActivityDrillMembers), new Action<ActivityDrillMember>(this.detach_ActivityDrillMembers));
			this._ActivityScenarioMembers = new EntitySet<ActivityScenarioMember>(new Action<ActivityScenarioMember>(this.attach_ActivityScenarioMembers), new Action<ActivityScenarioMember>(this.detach_ActivityScenarioMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_ActivityDrillMember", Storage="_ActivityDrillMembers", ThisKey="id", OtherKey="RoleId")]
		public EntitySet<ActivityDrillMember> ActivityDrillMembers
		{
			get
			{
				return this._ActivityDrillMembers;
			}
			set
			{
				this._ActivityDrillMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_ActivityScenarioMember", Storage="_ActivityScenarioMembers", ThisKey="id", OtherKey="Role")]
		public EntitySet<ActivityScenarioMember> ActivityScenarioMembers
		{
			get
			{
				return this._ActivityScenarioMembers;
			}
			set
			{
				this._ActivityScenarioMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActivityDrillMembers(ActivityDrillMember entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = this;
		}
		
		private void detach_ActivityDrillMembers(ActivityDrillMember entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = null;
		}
		
		private void attach_ActivityScenarioMembers(ActivityScenarioMember entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = this;
		}
		
		private void detach_ActivityScenarioMembers(ActivityScenarioMember entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scenarios")]
	public partial class Scenario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Scenario()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchemaVersions")]
	public partial class SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SchemaVersionID;
		
		private int _VersionNumber;
		
		private string _SourceIdentifier;
		
		private string _ScriptName;
		
		private System.DateTime _Applied;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchemaVersionIDChanging(int value);
    partial void OnSchemaVersionIDChanged();
    partial void OnVersionNumberChanging(int value);
    partial void OnVersionNumberChanged();
    partial void OnSourceIdentifierChanging(string value);
    partial void OnSourceIdentifierChanged();
    partial void OnScriptNameChanging(string value);
    partial void OnScriptNameChanged();
    partial void OnAppliedChanging(System.DateTime value);
    partial void OnAppliedChanged();
    #endregion
		
		public SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchemaVersionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SchemaVersionID
		{
			get
			{
				return this._SchemaVersionID;
			}
			set
			{
				if ((this._SchemaVersionID != value))
				{
					this.OnSchemaVersionIDChanging(value);
					this.SendPropertyChanging();
					this._SchemaVersionID = value;
					this.SendPropertyChanged("SchemaVersionID");
					this.OnSchemaVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNumber", DbType="Int NOT NULL")]
		public int VersionNumber
		{
			get
			{
				return this._VersionNumber;
			}
			set
			{
				if ((this._VersionNumber != value))
				{
					this.OnVersionNumberChanging(value);
					this.SendPropertyChanging();
					this._VersionNumber = value;
					this.SendPropertyChanged("VersionNumber");
					this.OnVersionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceIdentifier", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SourceIdentifier
		{
			get
			{
				return this._SourceIdentifier;
			}
			set
			{
				if ((this._SourceIdentifier != value))
				{
					this.OnSourceIdentifierChanging(value);
					this.SendPropertyChanging();
					this._SourceIdentifier = value;
					this.SendPropertyChanged("SourceIdentifier");
					this.OnSourceIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ScriptName
		{
			get
			{
				return this._ScriptName;
			}
			set
			{
				if ((this._ScriptName != value))
				{
					this.OnScriptNameChanging(value);
					this.SendPropertyChanging();
					this._ScriptName = value;
					this.SendPropertyChanged("ScriptName");
					this.OnScriptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applied", DbType="DateTime NOT NULL")]
		public System.DateTime Applied
		{
			get
			{
				return this._Applied;
			}
			set
			{
				if ((this._Applied != value))
				{
					this.OnAppliedChanging(value);
					this.SendPropertyChanging();
					this._Applied = value;
					this.SendPropertyChanged("Applied");
					this.OnAppliedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecurityGroups")]
	public partial class SecurityGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SecurityGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sessions")]
	public partial class Session : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _Memberid;
		
		private bool _LogEnabled;
		
		private int _LogLevel;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.Guid> _Region;
		
		private System.Nullable<System.Guid> _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMemberidChanging(System.Guid value);
    partial void OnMemberidChanged();
    partial void OnLogEnabledChanging(bool value);
    partial void OnLogEnabledChanged();
    partial void OnLogLevelChanging(int value);
    partial void OnLogLevelChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    partial void OnUnitChanging(System.Nullable<System.Guid> value);
    partial void OnUnitChanged();
    #endregion
		
		public Session()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memberid", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Memberid
		{
			get
			{
				return this._Memberid;
			}
			set
			{
				if ((this._Memberid != value))
				{
					this.OnMemberidChanging(value);
					this.SendPropertyChanging();
					this._Memberid = value;
					this.SendPropertyChanged("Memberid");
					this.OnMemberidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogEnabled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LogEnabled
		{
			get
			{
				return this._LogEnabled;
			}
			set
			{
				if ((this._LogEnabled != value))
				{
					this.OnLogEnabledChanging(value);
					this.SendPropertyChanging();
					this._LogEnabled = value;
					this.SendPropertyChanged("LogEnabled");
					this.OnLogEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogLevel", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int LogLevel
		{
			get
			{
				return this._LogLevel;
			}
			set
			{
				if ((this._LogLevel != value))
				{
					this.OnLogLevelChanging(value);
					this.SendPropertyChanging();
					this._LogLevel = value;
					this.SendPropertyChanged("LogLevel");
					this.OnLogLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TidePorts")]
	public partial class TidePort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Name;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private System.Nullable<decimal> _HW;
		
		private System.Nullable<decimal> _LW;
		
		private System.Nullable<decimal> _MHWS;
		
		private System.Nullable<decimal> _MHWN;
		
		private System.Nullable<decimal> _MLWN;
		
		private System.Nullable<decimal> _MLWS;
		
		private System.Nullable<decimal> _MSL;
		
		private System.Nullable<decimal> _ration;
		
		private System.Nullable<bool> _isPrimaryPort;
		
		private System.Nullable<System.Guid> _PrimaryPort;
		
		private string _Area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnHWChanging(System.Nullable<decimal> value);
    partial void OnHWChanged();
    partial void OnLWChanging(System.Nullable<decimal> value);
    partial void OnLWChanged();
    partial void OnMHWSChanging(System.Nullable<decimal> value);
    partial void OnMHWSChanged();
    partial void OnMHWNChanging(System.Nullable<decimal> value);
    partial void OnMHWNChanged();
    partial void OnMLWNChanging(System.Nullable<decimal> value);
    partial void OnMLWNChanged();
    partial void OnMLWSChanging(System.Nullable<decimal> value);
    partial void OnMLWSChanged();
    partial void OnMSLChanging(System.Nullable<decimal> value);
    partial void OnMSLChanged();
    partial void OnrationChanging(System.Nullable<decimal> value);
    partial void OnrationChanged();
    partial void OnisPrimaryPortChanging(System.Nullable<bool> value);
    partial void OnisPrimaryPortChanged();
    partial void OnPrimaryPortChanging(System.Nullable<System.Guid> value);
    partial void OnPrimaryPortChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    #endregion
		
		public TidePort()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HW", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> HW
		{
			get
			{
				return this._HW;
			}
			set
			{
				if ((this._HW != value))
				{
					this.OnHWChanging(value);
					this.SendPropertyChanging();
					this._HW = value;
					this.SendPropertyChanged("HW");
					this.OnHWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LW", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> LW
		{
			get
			{
				return this._LW;
			}
			set
			{
				if ((this._LW != value))
				{
					this.OnLWChanging(value);
					this.SendPropertyChanging();
					this._LW = value;
					this.SendPropertyChanged("LW");
					this.OnLWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHWS", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> MHWS
		{
			get
			{
				return this._MHWS;
			}
			set
			{
				if ((this._MHWS != value))
				{
					this.OnMHWSChanging(value);
					this.SendPropertyChanging();
					this._MHWS = value;
					this.SendPropertyChanged("MHWS");
					this.OnMHWSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MHWN", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> MHWN
		{
			get
			{
				return this._MHWN;
			}
			set
			{
				if ((this._MHWN != value))
				{
					this.OnMHWNChanging(value);
					this.SendPropertyChanging();
					this._MHWN = value;
					this.SendPropertyChanged("MHWN");
					this.OnMHWNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLWN", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> MLWN
		{
			get
			{
				return this._MLWN;
			}
			set
			{
				if ((this._MLWN != value))
				{
					this.OnMLWNChanging(value);
					this.SendPropertyChanging();
					this._MLWN = value;
					this.SendPropertyChanged("MLWN");
					this.OnMLWNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MLWS", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> MLWS
		{
			get
			{
				return this._MLWS;
			}
			set
			{
				if ((this._MLWS != value))
				{
					this.OnMLWSChanging(value);
					this.SendPropertyChanging();
					this._MLWS = value;
					this.SendPropertyChanged("MLWS");
					this.OnMLWSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MSL", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> MSL
		{
			get
			{
				return this._MSL;
			}
			set
			{
				if ((this._MSL != value))
				{
					this.OnMSLChanging(value);
					this.SendPropertyChanging();
					this._MSL = value;
					this.SendPropertyChanged("MSL");
					this.OnMSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ration", DbType="Decimal(10,6)")]
		public System.Nullable<decimal> ration
		{
			get
			{
				return this._ration;
			}
			set
			{
				if ((this._ration != value))
				{
					this.OnrationChanging(value);
					this.SendPropertyChanging();
					this._ration = value;
					this.SendPropertyChanged("ration");
					this.OnrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimaryPort", DbType="Bit")]
		public System.Nullable<bool> isPrimaryPort
		{
			get
			{
				return this._isPrimaryPort;
			}
			set
			{
				if ((this._isPrimaryPort != value))
				{
					this.OnisPrimaryPortChanging(value);
					this.SendPropertyChanging();
					this._isPrimaryPort = value;
					this.SendPropertyChanged("isPrimaryPort");
					this.OnisPrimaryPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryPort", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PrimaryPort
		{
			get
			{
				return this._PrimaryPort;
			}
			set
			{
				if ((this._PrimaryPort != value))
				{
					this.OnPrimaryPortChanging(value);
					this.SendPropertyChanging();
					this._PrimaryPort = value;
					this.SendPropertyChanged("PrimaryPort");
					this.OnPrimaryPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(256)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TripStatistics")]
	public partial class TripStatistic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Userid;
		
		private int _TripCount;
		
		private int _SkipperTripCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseridChanging(System.Guid value);
    partial void OnUseridChanged();
    partial void OnTripCountChanging(int value);
    partial void OnTripCountChanged();
    partial void OnSkipperTripCountChanging(int value);
    partial void OnSkipperTripCountChanged();
    #endregion
		
		public TripStatistic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					this.OnUseridChanging(value);
					this.SendPropertyChanging();
					this._Userid = value;
					this.SendPropertyChanged("Userid");
					this.OnUseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripCount", DbType="Int NOT NULL")]
		public int TripCount
		{
			get
			{
				return this._TripCount;
			}
			set
			{
				if ((this._TripCount != value))
				{
					this.OnTripCountChanging(value);
					this.SendPropertyChanging();
					this._TripCount = value;
					this.SendPropertyChanged("TripCount");
					this.OnTripCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipperTripCount", DbType="Int NOT NULL")]
		public int SkipperTripCount
		{
			get
			{
				return this._SkipperTripCount;
			}
			set
			{
				if ((this._SkipperTripCount != value))
				{
					this.OnSkipperTripCountChanging(value);
					this.SendPropertyChanging();
					this._SkipperTripCount = value;
					this.SendPropertyChanged("SkipperTripCount");
					this.OnSkipperTripCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TripStatisticsTotals")]
	public partial class TripStatisticsTotal
	{
		
		private System.Guid _memberid;
		
		private System.Nullable<decimal> _CrewHours;
		
		private System.Nullable<decimal> _SkipperHours;
		
		private System.Nullable<decimal> _TotalHours;
		
		public TripStatisticsTotal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberid
		{
			get
			{
				return this._memberid;
			}
			set
			{
				if ((this._memberid != value))
				{
					this._memberid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrewHours", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> CrewHours
		{
			get
			{
				return this._CrewHours;
			}
			set
			{
				if ((this._CrewHours != value))
				{
					this._CrewHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipperHours", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> SkipperHours
		{
			get
			{
				return this._SkipperHours;
			}
			set
			{
				if ((this._SkipperHours != value))
				{
					this._SkipperHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHours", DbType="Decimal(38,7)")]
		public System.Nullable<decimal> TotalHours
		{
			get
			{
				return this._TotalHours;
			}
			set
			{
				if ((this._TotalHours != value))
				{
					this._TotalHours = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unit")]
	public partial class Unit
	{
		
		private System.Guid _id;
		
		private string _Name;
		
		private System.Guid _Region;
		
		public Unit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WCFEvents")]
	public partial class WCFEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private int _session;
		
		private string _name;
		
		private string _objectstr;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private System.Nullable<System.Guid> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnsessionChanging(int value);
    partial void OnsessionChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnobjectstrChanging(string value);
    partial void OnobjectstrChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    partial void OnRegionChanging(System.Nullable<System.Guid> value);
    partial void OnRegionChanged();
    #endregion
		
		public WCFEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_session", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int session
		{
			get
			{
				return this._session;
			}
			set
			{
				if ((this._session != value))
				{
					this.OnsessionChanging(value);
					this.SendPropertyChanging();
					this._session = value;
					this.SendPropertyChanged("session");
					this.OnsessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectstr", DbType="NVarChar(2048)", UpdateCheck=UpdateCheck.Never)]
		public string objectstr
		{
			get
			{
				return this._objectstr;
			}
			set
			{
				if ((this._objectstr != value))
				{
					this.OnobjectstrChanging(value);
					this.SendPropertyChanging();
					this._objectstr = value;
					this.SendPropertyChanged("objectstr");
					this.OnobjectstrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalculateTripStatistics")]
	public partial class CalculateTripStatistic
	{
		
		private System.Guid _MemberId;
		
		private System.Nullable<int> _TripCoun;
		
		private int _skippertripcount;
		
		public CalculateTripStatistic()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripCoun", DbType="Int")]
		public System.Nullable<int> TripCoun
		{
			get
			{
				return this._TripCoun;
			}
			set
			{
				if ((this._TripCoun != value))
				{
					this._TripCoun = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skippertripcount", DbType="Int NOT NULL")]
		public int skippertripcount
		{
			get
			{
				return this._skippertripcount;
			}
			set
			{
				if ((this._skippertripcount != value))
				{
					this._skippertripcount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcedureLastCompleted")]
	public partial class ProcedureLastCompleted
	{
		
		private System.Guid _id;
		
		private string _Name;
		
		private int _Type;
		
		private System.Nullable<System.DateTime> _LastDateCompleted;
		
		private System.Nullable<System.Guid> _Unit;
		
		public ProcedureLastCompleted()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDateCompleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDateCompleted
		{
			get
			{
				return this._LastDateCompleted;
			}
			set
			{
				if ((this._LastDateCompleted != value))
				{
					this._LastDateCompleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CoastguardRescueVesselDetails")]
	public partial class CoastguardRescueVesselDetail
	{
		
		private System.Guid _id;
		
		private string _name;
		
		private System.Guid _Unit;
		
		private System.Nullable<System.Guid> _PortEngine;
		
		private System.Nullable<System.Guid> _StarboardEngine;
		
		private System.Nullable<System.Guid> _MiddleEngine;
		
		public CoastguardRescueVesselDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortEngine", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PortEngine
		{
			get
			{
				return this._PortEngine;
			}
			set
			{
				if ((this._PortEngine != value))
				{
					this._PortEngine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StarboardEngine", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> StarboardEngine
		{
			get
			{
				return this._StarboardEngine;
			}
			set
			{
				if ((this._StarboardEngine != value))
				{
					this._StarboardEngine = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleEngine", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> MiddleEngine
		{
			get
			{
				return this._MiddleEngine;
			}
			set
			{
				if ((this._MiddleEngine != value))
				{
					this._MiddleEngine = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrewStatistics")]
	public partial class CrewStatistic
	{
		
		private System.Guid _id;
		
		private string _UserId;
		
		private string _Password;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Mobile;
		
		private string _Home;
		
		private string _Work;
		
		private string _email;
		
		private System.Nullable<bool> _Skipper;
		
		private System.Nullable<bool> _Trainee;
		
		private System.Nullable<bool> _Operational;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Senior;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private System.Nullable<System.DateTime> _DateJoined;
		
		private System.Nullable<int> _TripCount;
		
		private System.Nullable<int> _SkipperTripCount;
		
		private System.Nullable<System.Guid> _Unit;
		
		public CrewStatistic()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this._First_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Home
		{
			get
			{
				return this._Home;
			}
			set
			{
				if ((this._Home != value))
				{
					this._Home = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Work]", Storage="_Work", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Work
		{
			get
			{
				return this._Work;
			}
			set
			{
				if ((this._Work != value))
				{
					this._Work = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skipper", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Skipper
		{
			get
			{
				return this._Skipper;
			}
			set
			{
				if ((this._Skipper != value))
				{
					this._Skipper = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trainee", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Trainee
		{
			get
			{
				return this._Trainee;
			}
			set
			{
				if ((this._Trainee != value))
				{
					this._Trainee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operational", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Operational
		{
			get
			{
				return this._Operational;
			}
			set
			{
				if ((this._Operational != value))
				{
					this._Operational = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this._Deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senior", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Senior
		{
			get
			{
				return this._Senior;
			}
			set
			{
				if ((this._Senior != value))
				{
					this._Senior = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this._Timestamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateJoined", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateJoined
		{
			get
			{
				return this._DateJoined;
			}
			set
			{
				if ((this._DateJoined != value))
				{
					this._DateJoined = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripCount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TripCount
		{
			get
			{
				return this._TripCount;
			}
			set
			{
				if ((this._TripCount != value))
				{
					this._TripCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipperTripCount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SkipperTripCount
		{
			get
			{
				return this._SkipperTripCount;
			}
			set
			{
				if ((this._SkipperTripCount != value))
				{
					this._SkipperTripCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrewStatisticsTotals")]
	public partial class CrewStatisticsTotal
	{
		
		private System.Guid _id;
		
		private string _UserId;
		
		private string _Password;
		
		private string _First_Name;
		
		private string _Last_Name;
		
		private string _Mobile;
		
		private string _Home;
		
		private string _Work;
		
		private string _email;
		
		private System.Nullable<bool> _Skipper;
		
		private System.Nullable<bool> _Trainee;
		
		private System.Nullable<bool> _Operational;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Senior;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private System.Nullable<decimal> _CrewHours;
		
		private System.Nullable<decimal> _SkipperHours;
		
		private System.Nullable<decimal> _TotalHours;
		
		private System.Nullable<System.Guid> _Unit;
		
		public CrewStatisticsTotal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this._First_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this._Mobile = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Home
		{
			get
			{
				return this._Home;
			}
			set
			{
				if ((this._Home != value))
				{
					this._Home = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Work]", Storage="_Work", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Work
		{
			get
			{
				return this._Work;
			}
			set
			{
				if ((this._Work != value))
				{
					this._Work = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256)", UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skipper", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Skipper
		{
			get
			{
				return this._Skipper;
			}
			set
			{
				if ((this._Skipper != value))
				{
					this._Skipper = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trainee", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Trainee
		{
			get
			{
				return this._Trainee;
			}
			set
			{
				if ((this._Trainee != value))
				{
					this._Trainee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operational", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Operational
		{
			get
			{
				return this._Operational;
			}
			set
			{
				if ((this._Operational != value))
				{
					this._Operational = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this._Deleted = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senior", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> Senior
		{
			get
			{
				return this._Senior;
			}
			set
			{
				if ((this._Senior != value))
				{
					this._Senior = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this._Timestamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrewHours", DbType="Decimal(38,7)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CrewHours
		{
			get
			{
				return this._CrewHours;
			}
			set
			{
				if ((this._CrewHours != value))
				{
					this._CrewHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipperHours", DbType="Decimal(38,7)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SkipperHours
		{
			get
			{
				return this._SkipperHours;
			}
			set
			{
				if ((this._SkipperHours != value))
				{
					this._SkipperHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHours", DbType="Decimal(38,7)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TotalHours
		{
			get
			{
				return this._TotalHours;
			}
			set
			{
				if ((this._TotalHours != value))
				{
					this._TotalHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
